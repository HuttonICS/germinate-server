/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables.records;


import javax.annotation.Generated;

import jhi.germinate.server.database.enums.ViewTableClimatesDataType;
import jhi.germinate.server.database.tables.ViewTableClimates;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableClimatesRecord extends TableRecordImpl<ViewTableClimatesRecord> implements Record11<Integer, String, String, String, ViewTableClimatesDataType, Integer, String, String, Long, String, Long> {

    private static final long serialVersionUID = 1321221461;

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.climate_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public void setClimateId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.climate_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public Integer getClimateId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.climate_name</code>. Describes the climate.
     */
    public void setClimateName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.climate_name</code>. Describes the climate.
     */
    public String getClimateName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.climate_name_short</code>. Shortened version of the climate name which is used in some table headers.
     */
    public void setClimateNameShort(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.climate_name_short</code>. Shortened version of the climate name which is used in some table headers.
     */
    public String getClimateNameShort() {
        return (String) get(2);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.climate_description</code>. A longer description of the climate.
     */
    public void setClimateDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.climate_description</code>. A longer description of the climate.
     */
    public String getClimateDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.data_type</code>. Defines the datatype which can be FLOAT, INT or CHAR type.
     */
    public void setDataType(ViewTableClimatesDataType value) {
        set(4, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.data_type</code>. Defines the datatype which can be FLOAT, INT or CHAR type.
     */
    public ViewTableClimatesDataType getDataType() {
        return (ViewTableClimatesDataType) get(4);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.unit_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public void setUnitId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.unit_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public Integer getUnitId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.unit_name</code>. The name of the unit. This should be the name of the unit in full.
     */
    public void setUnitName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.unit_name</code>. The name of the unit. This should be the name of the unit in full.
     */
    public String getUnitName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.unit_description</code>. A description of the unit. If the unit is not a standard SI unit then it is beneficial to have a description which explains what the unit it, how it is derived and any other information which would help identifiy it.
     */
    public void setUnitDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.unit_description</code>. A description of the unit. If the unit is not a standard SI unit then it is beneficial to have a description which explains what the unit it, how it is derived and any other information which would help identifiy it.
     */
    public String getUnitDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.overlays</code>.
     */
    public void setOverlays(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.overlays</code>.
     */
    public Long getOverlays() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.unit_abbreviation</code>. This should be the unit abbreviation.
     */
    public void setUnitAbbreviation(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.unit_abbreviation</code>. This should be the unit abbreviation.
     */
    public String getUnitAbbreviation() {
        return (String) get(9);
    }

    /**
     * Setter for <code>germinate_template_4_0_0.view_table_climates.count</code>.
     */
    public void setCount(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>germinate_template_4_0_0.view_table_climates.count</code>.
     */
    public Long getCount() {
        return (Long) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, String, String, ViewTableClimatesDataType, Integer, String, String, Long, String, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, String, String, ViewTableClimatesDataType, Integer, String, String, Long, String, Long> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.CLIMATE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.CLIMATE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.CLIMATE_NAME_SHORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.CLIMATE_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ViewTableClimatesDataType> field5() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.DATA_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.UNIT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.UNIT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.UNIT_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.OVERLAYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.UNIT_ABBREVIATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return ViewTableClimates.VIEW_TABLE_CLIMATES.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getClimateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getClimateName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getClimateNameShort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getClimateDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesDataType component5() {
        return getDataType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getUnitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getUnitName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getUnitDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getOverlays();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getUnitAbbreviation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getClimateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getClimateName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getClimateNameShort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getClimateDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesDataType value5() {
        return getDataType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getUnitId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getUnitName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getUnitDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getOverlays();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getUnitAbbreviation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value1(Integer value) {
        setClimateId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value2(String value) {
        setClimateName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value3(String value) {
        setClimateNameShort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value4(String value) {
        setClimateDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value5(ViewTableClimatesDataType value) {
        setDataType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value6(Integer value) {
        setUnitId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value7(String value) {
        setUnitName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value8(String value) {
        setUnitDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value9(Long value) {
        setOverlays(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value10(String value) {
        setUnitAbbreviation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord value11(Long value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableClimatesRecord values(Integer value1, String value2, String value3, String value4, ViewTableClimatesDataType value5, Integer value6, String value7, String value8, Long value9, String value10, Long value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewTableClimatesRecord
     */
    public ViewTableClimatesRecord() {
        super(ViewTableClimates.VIEW_TABLE_CLIMATES);
    }

    /**
     * Create a detached, initialised ViewTableClimatesRecord
     */
    public ViewTableClimatesRecord(Integer climateId, String climateName, String climateNameShort, String climateDescription, ViewTableClimatesDataType dataType, Integer unitId, String unitName, String unitDescription, Long overlays, String unitAbbreviation, Long count) {
        super(ViewTableClimates.VIEW_TABLE_CLIMATES);

        set(0, climateId);
        set(1, climateName);
        set(2, climateNameShort);
        set(3, climateDescription);
        set(4, dataType);
        set(5, unitId);
        set(6, unitName);
        set(7, unitDescription);
        set(8, overlays);
        set(9, unitAbbreviation);
        set(10, count);
    }
// @formatter:on
}
