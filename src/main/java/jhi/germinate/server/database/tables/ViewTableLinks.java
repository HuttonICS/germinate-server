/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jhi.germinate.server.database.GerminateTemplate_4_20_06_15;
import jhi.germinate.server.database.tables.records.ViewTableLinksRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableLinks extends TableImpl<ViewTableLinksRecord> {

    private static final long serialVersionUID = -391793968;

    /**
     * The reference instance of <code>germinate_template_4_20_06_15.view_table_links</code>
     */
    public static final ViewTableLinks VIEW_TABLE_LINKS = new ViewTableLinks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewTableLinksRecord> getRecordType() {
        return ViewTableLinksRecord.class;
    }

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.link_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<ViewTableLinksRecord, Integer> LINK_ID = createField("link_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.link_description</code>. A description of the link.
     */
    public final TableField<ViewTableLinksRecord, String> LINK_DESCRIPTION = createField("link_description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "A description of the link.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.link_visibility</code>. Determines if the link is visible or not: {0, 1}
     */
    public final TableField<ViewTableLinksRecord, Boolean> LINK_VISIBILITY = createField("link_visibility", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "Determines if the link is visible or not: {0, 1}");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.linktype_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<ViewTableLinksRecord, Integer> LINKTYPE_ID = createField("linktype_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.linktype_description</code>. A description of the link.
     */
    public final TableField<ViewTableLinksRecord, String> LINKTYPE_DESCRIPTION = createField("linktype_description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "A description of the link\r.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.linktype_target_table</code>. This is the table that the link links to.
     */
    public final TableField<ViewTableLinksRecord, String> LINKTYPE_TARGET_TABLE = createField("linktype_target_table", org.jooq.impl.SQLDataType.VARCHAR(255), this, "This is the table that the link links to.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.linktype_target_column</code>. This is the column that is used to generate the link.
     */
    public final TableField<ViewTableLinksRecord, String> LINKTYPE_TARGET_COLUMN = createField("linktype_target_column", org.jooq.impl.SQLDataType.VARCHAR(255), this, "This is the column that is used to generate the link.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.link_foreign_id</code>.
     */
    public final TableField<ViewTableLinksRecord, Integer> LINK_FOREIGN_ID = createField("link_foreign_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.hyperlink</code>. The actual hyperlink.
     */
    public final TableField<ViewTableLinksRecord, String> HYPERLINK = createField("hyperlink", org.jooq.impl.SQLDataType.VARCHAR(255), this, "The actual hyperlink.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.placeholder</code>. The part of the link that will be replaced by the value of the target column.
     */
    public final TableField<ViewTableLinksRecord, String> PLACEHOLDER = createField("placeholder", org.jooq.impl.SQLDataType.VARCHAR(255), this, "The part of the link that will be replaced by the value of the target column.");

    /**
     * The column <code>germinate_template_4_20_06_15.view_table_links.updated_on</code>. When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.
     */
    public final TableField<ViewTableLinksRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP, this, "When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.");

    /**
     * Create a <code>germinate_template_4_20_06_15.view_table_links</code> table reference
     */
    public ViewTableLinks() {
        this(DSL.name("view_table_links"), null);
    }

    /**
     * Create an aliased <code>germinate_template_4_20_06_15.view_table_links</code> table reference
     */
    public ViewTableLinks(String alias) {
        this(DSL.name(alias), VIEW_TABLE_LINKS);
    }

    /**
     * Create an aliased <code>germinate_template_4_20_06_15.view_table_links</code> table reference
     */
    public ViewTableLinks(Name alias) {
        this(alias, VIEW_TABLE_LINKS);
    }

    private ViewTableLinks(Name alias, Table<ViewTableLinksRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewTableLinks(Name alias, Table<ViewTableLinksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateTemplate_4_20_06_15.GERMINATE_TEMPLATE_4_20_06_15;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableLinks as(String alias) {
        return new ViewTableLinks(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableLinks as(Name alias) {
        return new ViewTableLinks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTableLinks rename(String name) {
        return new ViewTableLinks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTableLinks rename(Name name) {
        return new ViewTableLinks(name, null);
    }
// @formatter:on
}
