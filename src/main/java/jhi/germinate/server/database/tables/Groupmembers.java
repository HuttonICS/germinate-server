/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jhi.germinate.server.database.GerminateTemplate_4_20_06_15;
import jhi.germinate.server.database.tables.records.GroupmembersRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * Defines which entities are contained within a group. These can be the primary 
 * key from any table.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Groupmembers extends TableImpl<GroupmembersRecord> {

    private static final long serialVersionUID = -1851023343;

    /**
     * The reference instance of <code>germinate_template_4_20_06_15.groupmembers</code>
     */
    public static final Groupmembers GROUPMEMBERS = new Groupmembers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupmembersRecord> getRecordType() {
        return GroupmembersRecord.class;
    }

    /**
     * The column <code>germinate_template_4_20_06_15.groupmembers.id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<GroupmembersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_template_4_20_06_15.groupmembers.foreign_id</code>. Foreign key to [table] ([table].id).
     */
    public final TableField<GroupmembersRecord, Integer> FOREIGN_ID = createField("foreign_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "Foreign key to [table] ([table].id).");

    /**
     * The column <code>germinate_template_4_20_06_15.groupmembers.group_id</code>. Foreign key to groups (groups.id).
     */
    public final TableField<GroupmembersRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "Foreign key to groups (groups.id).");

    /**
     * The column <code>germinate_template_4_20_06_15.groupmembers.created_on</code>. When the record was created.
     */
    public final TableField<GroupmembersRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was created.");

    /**
     * The column <code>germinate_template_4_20_06_15.groupmembers.updated_on</code>. When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.
     */
    public final TableField<GroupmembersRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.");

    /**
     * Create a <code>germinate_template_4_20_06_15.groupmembers</code> table reference
     */
    public Groupmembers() {
        this(DSL.name("groupmembers"), null);
    }

    /**
     * Create an aliased <code>germinate_template_4_20_06_15.groupmembers</code> table reference
     */
    public Groupmembers(String alias) {
        this(DSL.name(alias), GROUPMEMBERS);
    }

    /**
     * Create an aliased <code>germinate_template_4_20_06_15.groupmembers</code> table reference
     */
    public Groupmembers(Name alias) {
        this(alias, GROUPMEMBERS);
    }

    private Groupmembers(Name alias, Table<GroupmembersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Groupmembers(Name alias, Table<GroupmembersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Defines which entities are contained within a group. These can be the primary key from any table."));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateTemplate_4_20_06_15.GERMINATE_TEMPLATE_4_20_06_15;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GroupmembersRecord, Integer> getIdentity() {
        return Internal.createIdentity(jhi.germinate.server.database.tables.Groupmembers.GROUPMEMBERS, jhi.germinate.server.database.tables.Groupmembers.GROUPMEMBERS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GroupmembersRecord> getPrimaryKey() {
        return Internal.createUniqueKey(jhi.germinate.server.database.tables.Groupmembers.GROUPMEMBERS, "KEY_groupmembers_PRIMARY", jhi.germinate.server.database.tables.Groupmembers.GROUPMEMBERS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GroupmembersRecord>> getKeys() {
        return Arrays.<UniqueKey<GroupmembersRecord>>asList(
              Internal.createUniqueKey(jhi.germinate.server.database.tables.Groupmembers.GROUPMEMBERS, "KEY_groupmembers_PRIMARY", jhi.germinate.server.database.tables.Groupmembers.GROUPMEMBERS.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Groupmembers as(String alias) {
        return new Groupmembers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Groupmembers as(Name alias) {
        return new Groupmembers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Groupmembers rename(String name) {
        return new Groupmembers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Groupmembers rename(Name name) {
        return new Groupmembers(name, null);
    }
// @formatter:on
}
