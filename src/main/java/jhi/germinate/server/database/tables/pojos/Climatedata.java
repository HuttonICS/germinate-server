/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


// @formatter:off
/**
 * Holds montly average climate data such as rainfall, temperature or cloud 
 * cover. This is based on locations rather than accessions like most of the 
 * other tables in Germinate.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Climatedata implements Serializable {

    private static final long serialVersionUID = 2121280243;

    private Integer   id;
    private Integer   climateId;
    private Integer   locationId;
    private Double    climateValue;
    private Integer   datasetId;
    private Timestamp recordingDate;
    private String    oldRecordingDate;
    private Timestamp createdOn;
    private Timestamp updatedOn;

    public Climatedata() {}

    public Climatedata(Climatedata value) {
        this.id = value.id;
        this.climateId = value.climateId;
        this.locationId = value.locationId;
        this.climateValue = value.climateValue;
        this.datasetId = value.datasetId;
        this.recordingDate = value.recordingDate;
        this.oldRecordingDate = value.oldRecordingDate;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Climatedata(
        Integer   id,
        Integer   climateId,
        Integer   locationId,
        Double    climateValue,
        Integer   datasetId,
        Timestamp recordingDate,
        String    oldRecordingDate,
        Timestamp createdOn,
        Timestamp updatedOn
    ) {
        this.id = id;
        this.climateId = climateId;
        this.locationId = locationId;
        this.climateValue = climateValue;
        this.datasetId = datasetId;
        this.recordingDate = recordingDate;
        this.oldRecordingDate = oldRecordingDate;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getClimateId() {
        return this.climateId;
    }

    public void setClimateId(Integer climateId) {
        this.climateId = climateId;
    }

    public Integer getLocationId() {
        return this.locationId;
    }

    public void setLocationId(Integer locationId) {
        this.locationId = locationId;
    }

    public Double getClimateValue() {
        return this.climateValue;
    }

    public void setClimateValue(Double climateValue) {
        this.climateValue = climateValue;
    }

    public Integer getDatasetId() {
        return this.datasetId;
    }

    public void setDatasetId(Integer datasetId) {
        this.datasetId = datasetId;
    }

    public Timestamp getRecordingDate() {
        return this.recordingDate;
    }

    public void setRecordingDate(Timestamp recordingDate) {
        this.recordingDate = recordingDate;
    }

    public String getOldRecordingDate() {
        return this.oldRecordingDate;
    }

    public void setOldRecordingDate(String oldRecordingDate) {
        this.oldRecordingDate = oldRecordingDate;
    }

    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Climatedata (");

        sb.append(id);
        sb.append(", ").append(climateId);
        sb.append(", ").append(locationId);
        sb.append(", ").append(climateValue);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(recordingDate);
        sb.append(", ").append(oldRecordingDate);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
// @formatter:on
}
