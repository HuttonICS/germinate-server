/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables;


import javax.annotation.Generated;

import jhi.germinate.server.database.GerminateTemplate_4_0_0;
import jhi.germinate.server.database.tables.records.ViewTableInstitutionsRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableInstitutions extends TableImpl<ViewTableInstitutionsRecord> {

    private static final long serialVersionUID = -1173154508;

    /**
     * The reference instance of <code>germinate_template_4_0_0.view_table_institutions</code>
     */
    public static final ViewTableInstitutions VIEW_TABLE_INSTITUTIONS = new ViewTableInstitutions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewTableInstitutionsRecord> getRecordType() {
        return ViewTableInstitutionsRecord.class;
    }

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.institution_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<ViewTableInstitutionsRecord, Integer> INSTITUTION_ID = createField("institution_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.institution_name</code>. The institute name.
     */
    public final TableField<ViewTableInstitutionsRecord, String> INSTITUTION_NAME = createField("institution_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "The institute name.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.institution_acronym</code>. If there is an acronym for the institute.
     */
    public final TableField<ViewTableInstitutionsRecord, String> INSTITUTION_ACRONYM = createField("institution_acronym", org.jooq.impl.SQLDataType.VARCHAR(20), this, "If there is an acronym for the institute.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.institution_address</code>. The postal address of the institute.
     */
    public final TableField<ViewTableInstitutionsRecord, String> INSTITUTION_ADDRESS = createField("institution_address", org.jooq.impl.SQLDataType.CLOB, this, "The postal address of the institute.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.institution_email</code>. The email address to contact the institute.
     */
    public final TableField<ViewTableInstitutionsRecord, String> INSTITUTION_EMAIL = createField("institution_email", org.jooq.impl.SQLDataType.VARCHAR(255), this, "The email address to contact the institute.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.institution_contact</code>. The contact at the institute which should be used for correspondence.
     */
    public final TableField<ViewTableInstitutionsRecord, String> INSTITUTION_CONTACT = createField("institution_contact", org.jooq.impl.SQLDataType.VARCHAR(255), this, "The contact at the institute which should be used for correspondence.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.institution_phone</code>. The telephone number for the institute.
     */
    public final TableField<ViewTableInstitutionsRecord, String> INSTITUTION_PHONE = createField("institution_phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "The telephone number for the institute.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.country_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<ViewTableInstitutionsRecord, Integer> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.country_name</code>. Country name.
     */
    public final TableField<ViewTableInstitutionsRecord, String> COUNTRY_NAME = createField("country_name", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "Country name.");

    /**
     * The column <code>germinate_template_4_0_0.view_table_institutions.country_code</code>. ISO 2 Code for country.
     */
    public final TableField<ViewTableInstitutionsRecord, String> COUNTRY_CODE = createField("country_code", org.jooq.impl.SQLDataType.CHAR(2).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "ISO 2 Code for country.");

    /**
     * Create a <code>germinate_template_4_0_0.view_table_institutions</code> table reference
     */
    public ViewTableInstitutions() {
        this(DSL.name("view_table_institutions"), null);
    }

    /**
     * Create an aliased <code>germinate_template_4_0_0.view_table_institutions</code> table reference
     */
    public ViewTableInstitutions(String alias) {
        this(DSL.name(alias), VIEW_TABLE_INSTITUTIONS);
    }

    /**
     * Create an aliased <code>germinate_template_4_0_0.view_table_institutions</code> table reference
     */
    public ViewTableInstitutions(Name alias) {
        this(alias, VIEW_TABLE_INSTITUTIONS);
    }

    private ViewTableInstitutions(Name alias, Table<ViewTableInstitutionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewTableInstitutions(Name alias, Table<ViewTableInstitutionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateTemplate_4_0_0.GERMINATE_TEMPLATE_4_0_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableInstitutions as(String alias) {
        return new ViewTableInstitutions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableInstitutions as(Name alias) {
        return new ViewTableInstitutions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTableInstitutions rename(String name) {
        return new ViewTableInstitutions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTableInstitutions rename(Name name) {
        return new ViewTableInstitutions(name, null);
    }
// @formatter:on
}
