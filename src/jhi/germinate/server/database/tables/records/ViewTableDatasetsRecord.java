/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import jhi.germinate.server.database.tables.ViewTableDatasets;

import org.jooq.Field;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableDatasetsRecord extends TableRecordImpl<ViewTableDatasetsRecord> implements Record19<Integer, String, String, String, String, String, String, String, String, String, Integer, String, String, Date, Date, ULong, ULong, Boolean, String> {

    private static final long serialVersionUID = 314355127;

    /**
     * Create a detached ViewTableDatasetsRecord
     */
    public ViewTableDatasetsRecord() {
        super(ViewTableDatasets.VIEW_TABLE_DATASETS);
    }

    /**
     * Create a detached, initialised ViewTableDatasetsRecord
     */
    public ViewTableDatasetsRecord(Integer datasetId, String datasetName, String datesetDescription, String experimentType, String experimentName, String datatype, String datasetState, String location, String countryCode, String countryName, Integer licenseId, String licenseName, String contact, Date startDate, Date endDate, ULong dataObjectCount, ULong dataPointCount, Boolean isExternal, String acceptedBy) {
        super(ViewTableDatasets.VIEW_TABLE_DATASETS);

        set(0, datasetId);
        set(1, datasetName);
        set(2, datesetDescription);
        set(3, experimentType);
        set(4, experimentName);
        set(5, datatype);
        set(6, datasetState);
        set(7, location);
        set(8, countryCode);
        set(9, countryName);
        set(10, licenseId);
        set(11, licenseName);
        set(12, contact);
        set(13, startDate);
        set(14, endDate);
        set(15, dataObjectCount);
        set(16, dataPointCount);
        set(17, isExternal);
        set(18, acceptedBy);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.dataset_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public Integer getDatasetId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.dataset_id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public void setDatasetId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.dataset_name</code>. Describes the dataset.
     */
    public String getDatasetName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.dataset_name</code>. Describes the dataset.
     */
    public void setDatasetName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.dateset_description</code>. The name of this dataset.
     */
    public String getDatesetDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.dateset_description</code>. The name of this dataset.
     */
    public void setDatesetDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.experiment_type</code>. Describes the experiment type.
     */
    public String getExperimentType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.experiment_type</code>. Describes the experiment type.
     */
    public void setExperimentType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.experiment_name</code>. Describes the experiment.
     */
    public String getExperimentName() {
        return (String) get(4);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.datatype</code>. A description of the data type of the contained data. Examples might be: "raw data", "BLUPs", etc.
     */
    public String getDatatype() {
        return (String) get(5);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.experiment_name</code>. Describes the experiment.
     */
    public void setExperimentName(String value) {
        set(4, value);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.datatype</code>. A description of the data type of the contained data. Examples might be: "raw data", "BLUPs", etc.
     */
    public void setDatatype(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.dataset_state</code>. Defines the datasetstate.
     */
    public String getDatasetState() {
        return (String) get(6);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.location</code>. The site name where the location is.
     */
    public String getLocation() {
        return (String) get(7);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.dataset_state</code>. Defines the datasetstate.
     */
    public void setDatasetState(String value) {
        set(6, value);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.location</code>. The site name where the location is.
     */
    public void setLocation(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.country_code</code>. ISO 2 Code for country.
     */
    public String getCountryCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.country_code</code>. ISO 2 Code for country.
     */
    public void setCountryCode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.country_name</code>. Country name.
     */
    public String getCountryName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.country_name</code>. Country name.
     */
    public void setCountryName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.license_id</code>.
     */
    public Integer getLicenseId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.license_id</code>.
     */
    public void setLicenseId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.license_name</code>.
     */
    public String getLicenseName() {
        return (String) get(11);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.contact</code>. The contact to get more information about this dataset.
     */
    public String getContact() {
        return (String) get(12);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.license_name</code>.
     */
    public void setLicenseName(String value) {
        set(11, value);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.contact</code>. The contact to get more information about this dataset.
     */
    public void setContact(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.start_date</code>. Date that the dataset was generated.
     */
    public Date getStartDate() {
        return (Date) get(13);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.start_date</code>. Date that the dataset was generated.
     */
    public void setStartDate(Date value) {
        set(13, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.end_date</code>. Date at which the dataset recording ended.
     */
    public Date getEndDate() {
        return (Date) get(14);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.end_date</code>. Date at which the dataset recording ended.
     */
    public void setEndDate(Date value) {
        set(14, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.data_object_count</code>. The number of data objects contained in this dataset.
     */
    public ULong getDataObjectCount() {
        return (ULong) get(15);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.data_object_count</code>. The number of data objects contained in this dataset.
     */
    public void setDataObjectCount(ULong value) {
        set(15, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.data_point_count</code>. The number of individual data points contained in this dataset.
     */
    public ULong getDataPointCount() {
        return (ULong) get(16);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.data_point_count</code>. The number of individual data points contained in this dataset.
     */
    public void setDataPointCount(ULong value) {
        set(16, value);
    }

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.is_external</code>. Defines if the dataset is contained within Germinate or from an external source and not stored in the database.
     */
    public Boolean getIsExternal() {
        return (Boolean) get(17);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.is_external</code>. Defines if the dataset is contained within Germinate or from an external source and not stored in the database.
     */
    public void setIsExternal(Boolean value) {
        set(17, value);
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>germinate_template_3_7_0.view_table_datasets.accepted_by</code>.
     */
    public String getAcceptedBy() {
        return (String) get(18);
    }

    /**
     * Setter for <code>germinate_template_3_7_0.view_table_datasets.accepted_by</code>.
     */
    public void setAcceptedBy(String value) {
        set(18, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Integer, String, String, String, String, String, String, String, String, String, Integer, String, String, Date, Date, ULong, ULong, Boolean, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<Integer, String, String, String, String, String, String, String, String, String, Integer, String, String, Date, Date, ULong, ULong, Boolean, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.DATASET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.DATASET_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.DATESET_DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.DATATYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.EXPERIMENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.EXPERIMENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.DATASET_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.COUNTRY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.COUNTRY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.CONTACT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.LICENSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.LICENSE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field14() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.START_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field15() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.END_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field16() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.DATA_OBJECT_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field17() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.DATA_POINT_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field18() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.IS_EXTERNAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return ViewTableDatasets.VIEW_TABLE_DATASETS.ACCEPTED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDatasetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDatasetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDatesetDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDatatype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getExperimentType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getExperimentName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDatasetState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getCountryCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getCountryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getContact();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getLicenseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getLicenseName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component14() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component15() {
        return getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component16() {
        return getDataObjectCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component17() {
        return getDataPointCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component18() {
        return getIsExternal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getAcceptedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDatasetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDatasetName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDatesetDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDatatype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getExperimentType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getExperimentName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDatasetState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCountryCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getCountryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getContact();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getLicenseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getLicenseName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value14() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value15() {
        return getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value16() {
        return getDataObjectCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value17() {
        return getDataPointCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value18() {
        return getIsExternal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getAcceptedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value1(Integer value) {
        setDatasetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value2(String value) {
        setDatasetName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value3(String value) {
        setDatesetDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value6(String value) {
        setDatatype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value4(String value) {
        setExperimentType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value8(String value) {
        setLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value5(String value) {
        setExperimentName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value7(String value) {
        setDatasetState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value9(String value) {
        setCountryCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value10(String value) {
        setCountryName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value13(String value) {
        setContact(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value11(Integer value) {
        setLicenseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value12(String value) {
        setLicenseName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value14(Date value) {
        setStartDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value15(Date value) {
        setEndDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value16(ULong value) {
        setDataObjectCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value17(ULong value) {
        setDataPointCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value18(Boolean value) {
        setIsExternal(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord value19(String value) {
        setAcceptedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableDatasetsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, Integer value11, String value12, String value13, Date value14, Date value15, ULong value16, ULong value17, Boolean value18, String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }
// @formatter:on
}
