/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jhi.germinate.server.database.GerminateTemplate_3_7_0;
import jhi.germinate.server.database.tables.records.MegaenvironmentsRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * Defines the mega environments if used and their temperature and precipitation 
 * ranges.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Megaenvironments extends TableImpl<MegaenvironmentsRecord> {

    private static final long serialVersionUID = 2000554643;

    /**
     * The reference instance of <code>germinate_template_3_7_0.megaenvironments</code>
     */
    public static final Megaenvironments MEGAENVIRONMENTS = new Megaenvironments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MegaenvironmentsRecord> getRecordType() {
        return MegaenvironmentsRecord.class;
    }

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<MegaenvironmentsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.name</code>. The mega environment name.
     */
    public final TableField<MegaenvironmentsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "The mega environment name.");

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.max_temp_lower</code>. The lower maximum temperature for this environment.
     */
    public final TableField<MegaenvironmentsRecord, Integer> MAX_TEMP_LOWER = createField("max_temp_lower", org.jooq.impl.SQLDataType.INTEGER, this, "The lower maximum temperature for this environment.");

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.max_temp_upper</code>. The maximum temperature for this environment.
     */
    public final TableField<MegaenvironmentsRecord, Integer> MAX_TEMP_UPPER = createField("max_temp_upper", org.jooq.impl.SQLDataType.INTEGER, this, "The maximum temperature for this environment.");

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.precip_lower</code>. The minimum precipitation for this environment.
     */
    public final TableField<MegaenvironmentsRecord, Integer> PRECIP_LOWER = createField("precip_lower", org.jooq.impl.SQLDataType.INTEGER, this, "The minimum precipitation for this environment.");

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.precip_upper</code>. the maximum precipitation for this environment.
     */
    public final TableField<MegaenvironmentsRecord, Integer> PRECIP_UPPER = createField("precip_upper", org.jooq.impl.SQLDataType.INTEGER, this, "the maximum precipitation for this environment.");

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.created_on</code>. When the record was created.
     */
    public final TableField<MegaenvironmentsRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was created.");

    /**
     * The column <code>germinate_template_3_7_0.megaenvironments.updated_on</code>. When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.
     */
    public final TableField<MegaenvironmentsRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.");

    /**
     * Create a <code>germinate_template_3_7_0.megaenvironments</code> table reference
     */
    public Megaenvironments() {
        this(DSL.name("megaenvironments"), null);
    }

    /**
     * Create an aliased <code>germinate_template_3_7_0.megaenvironments</code> table reference
     */
    public Megaenvironments(String alias) {
        this(DSL.name(alias), MEGAENVIRONMENTS);
    }

    /**
     * Create an aliased <code>germinate_template_3_7_0.megaenvironments</code> table reference
     */
    public Megaenvironments(Name alias) {
        this(alias, MEGAENVIRONMENTS);
    }

    private Megaenvironments(Name alias, Table<MegaenvironmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Megaenvironments(Name alias, Table<MegaenvironmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Defines the mega environments if used and their temperature and precipitation ranges."));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateTemplate_3_7_0.GERMINATE_TEMPLATE_3_7_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MegaenvironmentsRecord, Integer> getIdentity() {
        return Internal.createIdentity(jhi.germinate.server.database.tables.Megaenvironments.MEGAENVIRONMENTS, jhi.germinate.server.database.tables.Megaenvironments.MEGAENVIRONMENTS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MegaenvironmentsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(jhi.germinate.server.database.tables.Megaenvironments.MEGAENVIRONMENTS, "KEY_megaenvironments_PRIMARY", jhi.germinate.server.database.tables.Megaenvironments.MEGAENVIRONMENTS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MegaenvironmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<MegaenvironmentsRecord>>asList(
              Internal.createUniqueKey(jhi.germinate.server.database.tables.Megaenvironments.MEGAENVIRONMENTS, "KEY_megaenvironments_PRIMARY", jhi.germinate.server.database.tables.Megaenvironments.MEGAENVIRONMENTS.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Megaenvironments as(String alias) {
        return new Megaenvironments(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Megaenvironments as(Name alias) {
        return new Megaenvironments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Megaenvironments rename(String name) {
        return new Megaenvironments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Megaenvironments rename(Name name) {
        return new Megaenvironments(name, null);
    }
// @formatter:on
}
