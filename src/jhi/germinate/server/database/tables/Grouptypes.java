/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables;


import org.jooq.*;
import org.jooq.impl.*;

import java.sql.*;
import java.util.*;

import javax.annotation.*;

import jhi.germinate.server.database.*;
import jhi.germinate.server.database.tables.records.*;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Grouptypes extends TableImpl<GrouptypesRecord> {

    /**
     * The reference instance of <code>germinate_template_3_6_0.grouptypes</code>
     */
    public static final Grouptypes GROUPTYPES = new Grouptypes();
    private static final long serialVersionUID = -1081152298;
    /**
     * The column <code>germinate_template_3_6_0.grouptypes.id</code>.
     */
    public final TableField<GrouptypesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");
    /**
     * The column <code>germinate_template_3_6_0.grouptypes.description</code>.
     */
    public final TableField<GrouptypesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>germinate_template_3_6_0.grouptypes.target_table</code>.
     */
    public final TableField<GrouptypesRecord, String> TARGET_TABLE = createField("target_table", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");
    /**
     * The column <code>germinate_template_3_6_0.grouptypes.created_on</code>. When the record was created.
     */
    public final TableField<GrouptypesRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was created.");
    /**
     * The column <code>germinate_template_3_6_0.grouptypes.updated_on</code>. When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.
     */
    public final TableField<GrouptypesRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was updated. This may be different from the created on date if subsequent changes have been made to the underlying record.");

    /**
     * Create a <code>germinate_template_3_6_0.grouptypes</code> table reference
     */
    public Grouptypes() {
        this(DSL.name("grouptypes"), null);
    }

    /**
     * Create an aliased <code>germinate_template_3_6_0.grouptypes</code> table reference
     */
    public Grouptypes(String alias) {
        this(DSL.name(alias), GROUPTYPES);
    }

    /**
     * Create an aliased <code>germinate_template_3_6_0.grouptypes</code> table reference
     */
    public Grouptypes(Name alias) {
        this(alias, GROUPTYPES);
    }

    private Grouptypes(Name alias, Table<GrouptypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Grouptypes(Name alias, Table<GrouptypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Grouptypes(Table<O> child, ForeignKey<O, GrouptypesRecord> key) {
        super(child, key, GROUPTYPES);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GrouptypesRecord> getRecordType() {
        return GrouptypesRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateTemplate_3_6_0.GERMINATE_TEMPLATE_3_6_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GROUPTYPES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GrouptypesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GROUPTYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GrouptypesRecord> getPrimaryKey() {
        return Keys.KEY_GROUPTYPES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GrouptypesRecord>> getKeys() {
        return Arrays.<UniqueKey<GrouptypesRecord>>asList(Keys.KEY_GROUPTYPES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Grouptypes as(String alias) {
        return new Grouptypes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Grouptypes as(Name alias) {
        return new Grouptypes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Grouptypes rename(String name) {
        return new Grouptypes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Grouptypes rename(Name name) {
        return new Grouptypes(name, null);
    }
}
