/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables;


import javax.annotation.Generated;

import jhi.germinate.server.database.GerminateTemplate_3_7_0;
import jhi.germinate.server.database.tables.records.ViewTableLicensesRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTableLicenses extends TableImpl<ViewTableLicensesRecord> {

    private static final long serialVersionUID = -948296992;

    /**
     * The reference instance of <code>germinate_template_3_7_0.view_table_licenses</code>
     */
    public static final ViewTableLicenses VIEW_TABLE_LICENSES = new ViewTableLicenses();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewTableLicensesRecord> getRecordType() {
        return ViewTableLicensesRecord.class;
    }

    /**
     * The column <code>germinate_template_3_7_0.view_table_licenses.license_id</code>.
     */
    public final TableField<ViewTableLicensesRecord, Integer> LICENSE_ID = createField("license_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>germinate_template_3_7_0.view_table_licenses.license_name</code>.
     */
    public final TableField<ViewTableLicensesRecord, String> LICENSE_NAME = createField("license_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>germinate_template_3_7_0.view_table_licenses.license_description</code>.
     */
    public final TableField<ViewTableLicensesRecord, String> LICENSE_DESCRIPTION = createField("license_description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>germinate_template_3_7_0.view_table_licenses.license_content</code>.
     */
    public final TableField<ViewTableLicensesRecord, String> LICENSE_CONTENT = createField("license_content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>germinate_template_3_7_0.view_table_licenses.locale_name</code>.
     */
    public final TableField<ViewTableLicensesRecord, String> LOCALE_NAME = createField("locale_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>germinate_template_3_7_0.view_table_licenses.locale_description</code>.
     */
    public final TableField<ViewTableLicensesRecord, String> LOCALE_DESCRIPTION = createField("locale_description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>germinate_template_3_7_0.view_table_licenses</code> table reference
     */
    public ViewTableLicenses() {
        this(DSL.name("view_table_licenses"), null);
    }

    /**
     * Create an aliased <code>germinate_template_3_7_0.view_table_licenses</code> table reference
     */
    public ViewTableLicenses(String alias) {
        this(DSL.name(alias), VIEW_TABLE_LICENSES);
    }

    /**
     * Create an aliased <code>germinate_template_3_7_0.view_table_licenses</code> table reference
     */
    public ViewTableLicenses(Name alias) {
        this(alias, VIEW_TABLE_LICENSES);
    }

    private ViewTableLicenses(Name alias, Table<ViewTableLicensesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewTableLicenses(Name alias, Table<ViewTableLicensesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateTemplate_3_7_0.GERMINATE_TEMPLATE_3_7_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableLicenses as(String alias) {
        return new ViewTableLicenses(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewTableLicenses as(Name alias) {
        return new ViewTableLicenses(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTableLicenses rename(String name) {
        return new ViewTableLicenses(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewTableLicenses rename(Name name) {
        return new ViewTableLicenses(name, null);
    }
// @formatter:on
}
