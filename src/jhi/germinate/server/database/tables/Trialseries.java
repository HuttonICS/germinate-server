/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database.tables;


import org.jooq.*;
import org.jooq.impl.*;

import java.sql.*;
import java.util.*;

import javax.annotation.*;

import jhi.germinate.server.database.*;
import jhi.germinate.server.database.tables.records.*;


/**
 * Holds the names of trial series. Trial series define the name of the trial 
 * to which trials data is associated. Examples would include the overarching 
 * project.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Trialseries extends TableImpl<TrialseriesRecord> {

    private static final long serialVersionUID = -686627947;

    /**
     * The reference instance of <code>germinate_template_3_7_0.trialseries</code>
     */
    public static final Trialseries TRIALSERIES = new Trialseries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrialseriesRecord> getRecordType() {
        return TrialseriesRecord.class;
    }

    /**
     * The column <code>germinate_template_3_7_0.trialseries.id</code>. Primary id for this table. This uniquely identifies the row.
     */
    public final TableField<TrialseriesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "Primary id for this table. This uniquely identifies the row.");

    /**
     * The column <code>germinate_template_3_7_0.trialseries.seriesname</code>. The description of the trial series name.
     */
    public final TableField<TrialseriesRecord, String> SERIESNAME = createField("seriesname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "The description of the trial series name.");

    /**
     * The column <code>germinate_template_3_7_0.trialseries.created_on</code>. When the record was created.
     */
    public final TableField<TrialseriesRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was created.");

    /**
     * The column <code>germinate_template_3_7_0.trialseries.updated_on</code>. When the record was updated. This may be different from the created on date if changes have been made subsequently to the underlying record.
     */
    public final TableField<TrialseriesRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "When the record was updated. This may be different from the created on date if changes have been made subsequently to the underlying record.");

    /**
     * Create a <code>germinate_template_3_7_0.trialseries</code> table reference
     */
    public Trialseries() {
        this(DSL.name("trialseries"), null);
    }

    /**
     * Create an aliased <code>germinate_template_3_7_0.trialseries</code> table reference
     */
    public Trialseries(String alias) {
        this(DSL.name(alias), TRIALSERIES);
    }

    /**
     * Create an aliased <code>germinate_template_3_7_0.trialseries</code> table reference
     */
    public Trialseries(Name alias) {
        this(alias, TRIALSERIES);
    }

    private Trialseries(Name alias, Table<TrialseriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Trialseries(Name alias, Table<TrialseriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Holds the names of trial series. Trial series define the name of the trial to which trials data is associated. Examples would include the overarching project."));
    }

    public <O extends Record> Trialseries(Table<O> child, ForeignKey<O, TrialseriesRecord> key) {
        super(child, key, TRIALSERIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GerminateTemplate_3_7_0.GERMINATE_TEMPLATE_3_7_0;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TRIALSERIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TrialseriesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRIALSERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TrialseriesRecord> getPrimaryKey() {
        return Keys.KEY_TRIALSERIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TrialseriesRecord>> getKeys() {
        return Arrays.<UniqueKey<TrialseriesRecord>>asList(Keys.KEY_TRIALSERIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Trialseries as(String alias) {
        return new Trialseries(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Trialseries as(Name alias) {
        return new Trialseries(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Trialseries rename(String name) {
        return new Trialseries(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Trialseries rename(Name name) {
        return new Trialseries(name, null);
    }
}
