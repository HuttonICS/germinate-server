/*
 * This file is generated by jOOQ.
 */
package jhi.germinate.server.database;


import org.jooq.*;
import org.jooq.impl.*;

import javax.annotation.*;

import jhi.germinate.server.database.tables.*;
import jhi.germinate.server.database.tables.records.*;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>germinate_template_3_6_0</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AnalysismethodsRecord, Integer> IDENTITY_ANALYSISMETHODS = Identities0.IDENTITY_ANALYSISMETHODS;
    public static final Identity<AttributedataRecord, Integer> IDENTITY_ATTRIBUTEDATA = Identities0.IDENTITY_ATTRIBUTEDATA;
    public static final Identity<AttributesRecord, Integer> IDENTITY_ATTRIBUTES = Identities0.IDENTITY_ATTRIBUTES;
    public static final Identity<BiologicalstatusRecord, Integer> IDENTITY_BIOLOGICALSTATUS = Identities0.IDENTITY_BIOLOGICALSTATUS;
    public static final Identity<ClimatedataRecord, Integer> IDENTITY_CLIMATEDATA = Identities0.IDENTITY_CLIMATEDATA;
    public static final Identity<ClimateoverlaysRecord, Integer> IDENTITY_CLIMATEOVERLAYS = Identities0.IDENTITY_CLIMATEOVERLAYS;
    public static final Identity<ClimatesRecord, Integer> IDENTITY_CLIMATES = Identities0.IDENTITY_CLIMATES;
    public static final Identity<CollaboratorsRecord, Integer> IDENTITY_COLLABORATORS = Identities0.IDENTITY_COLLABORATORS;
    public static final Identity<CollectingsourcesRecord, Integer> IDENTITY_COLLECTINGSOURCES = Identities0.IDENTITY_COLLECTINGSOURCES;
    public static final Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = Identities0.IDENTITY_COMMENTS;
    public static final Identity<CommenttypesRecord, Integer> IDENTITY_COMMENTTYPES = Identities0.IDENTITY_COMMENTTYPES;
    public static final Identity<CompounddataRecord, Integer> IDENTITY_COMPOUNDDATA = Identities0.IDENTITY_COMPOUNDDATA;
    public static final Identity<CompoundsRecord, Integer> IDENTITY_COMPOUNDS = Identities0.IDENTITY_COMPOUNDS;
    public static final Identity<CountriesRecord, Integer> IDENTITY_COUNTRIES = Identities0.IDENTITY_COUNTRIES;
    public static final Identity<DatasetaccesslogsRecord, Integer> IDENTITY_DATASETACCESSLOGS = Identities0.IDENTITY_DATASETACCESSLOGS;
    public static final Identity<DatasetcollaboratorsRecord, Integer> IDENTITY_DATASETCOLLABORATORS = Identities0.IDENTITY_DATASETCOLLABORATORS;
    public static final Identity<DatasetmembersRecord, Integer> IDENTITY_DATASETMEMBERS = Identities0.IDENTITY_DATASETMEMBERS;
    public static final Identity<DatasetmembertypesRecord, Integer> IDENTITY_DATASETMEMBERTYPES = Identities0.IDENTITY_DATASETMEMBERTYPES;
    public static final Identity<DatasetmetaRecord, Integer> IDENTITY_DATASETMETA = Identities0.IDENTITY_DATASETMETA;
    public static final Identity<DatasetpermissionsRecord, Integer> IDENTITY_DATASETPERMISSIONS = Identities0.IDENTITY_DATASETPERMISSIONS;
    public static final Identity<DatasetsRecord, Integer> IDENTITY_DATASETS = Identities0.IDENTITY_DATASETS;
    public static final Identity<DatasetstatesRecord, Integer> IDENTITY_DATASETSTATES = Identities0.IDENTITY_DATASETSTATES;
    public static final Identity<EntitytypesRecord, Integer> IDENTITY_ENTITYTYPES = Identities0.IDENTITY_ENTITYTYPES;
    public static final Identity<ExperimentsRecord, Integer> IDENTITY_EXPERIMENTS = Identities0.IDENTITY_EXPERIMENTS;
    public static final Identity<ExperimenttypesRecord, Integer> IDENTITY_EXPERIMENTTYPES = Identities0.IDENTITY_EXPERIMENTTYPES;
    public static final Identity<GerminatebaseRecord, Integer> IDENTITY_GERMINATEBASE = Identities0.IDENTITY_GERMINATEBASE;
    public static final Identity<GroupmembersRecord, Integer> IDENTITY_GROUPMEMBERS = Identities0.IDENTITY_GROUPMEMBERS;
    public static final Identity<GroupsRecord, Integer> IDENTITY_GROUPS = Identities0.IDENTITY_GROUPS;
    public static final Identity<GrouptypesRecord, Integer> IDENTITY_GROUPTYPES = Identities0.IDENTITY_GROUPTYPES;
    public static final Identity<ImagesRecord, Integer> IDENTITY_IMAGES = Identities0.IDENTITY_IMAGES;
    public static final Identity<ImagetypesRecord, Integer> IDENTITY_IMAGETYPES = Identities0.IDENTITY_IMAGETYPES;
    public static final Identity<InstitutionsRecord, Integer> IDENTITY_INSTITUTIONS = Identities0.IDENTITY_INSTITUTIONS;
    public static final Identity<LicensedataRecord, Integer> IDENTITY_LICENSEDATA = Identities0.IDENTITY_LICENSEDATA;
    public static final Identity<LicenselogsRecord, Integer> IDENTITY_LICENSELOGS = Identities0.IDENTITY_LICENSELOGS;
    public static final Identity<LicensesRecord, Integer> IDENTITY_LICENSES = Identities0.IDENTITY_LICENSES;
    public static final Identity<LinksRecord, Integer> IDENTITY_LINKS = Identities0.IDENTITY_LINKS;
    public static final Identity<LinktypesRecord, Integer> IDENTITY_LINKTYPES = Identities0.IDENTITY_LINKTYPES;
    public static final Identity<LocalesRecord, Integer> IDENTITY_LOCALES = Identities0.IDENTITY_LOCALES;
    public static final Identity<LocationsRecord, Integer> IDENTITY_LOCATIONS = Identities0.IDENTITY_LOCATIONS;
    public static final Identity<LocationtypesRecord, Integer> IDENTITY_LOCATIONTYPES = Identities0.IDENTITY_LOCATIONTYPES;
    public static final Identity<MapdefinitionsRecord, Integer> IDENTITY_MAPDEFINITIONS = Identities0.IDENTITY_MAPDEFINITIONS;
    public static final Identity<MapfeaturetypesRecord, Integer> IDENTITY_MAPFEATURETYPES = Identities0.IDENTITY_MAPFEATURETYPES;
    public static final Identity<MapsRecord, Integer> IDENTITY_MAPS = Identities0.IDENTITY_MAPS;
    public static final Identity<MarkersRecord, Integer> IDENTITY_MARKERS = Identities0.IDENTITY_MARKERS;
    public static final Identity<MarkertypesRecord, Integer> IDENTITY_MARKERTYPES = Identities0.IDENTITY_MARKERTYPES;
    public static final Identity<MegaenvironmentdataRecord, Integer> IDENTITY_MEGAENVIRONMENTDATA = Identities0.IDENTITY_MEGAENVIRONMENTDATA;
    public static final Identity<MegaenvironmentsRecord, Integer> IDENTITY_MEGAENVIRONMENTS = Identities0.IDENTITY_MEGAENVIRONMENTS;
    public static final Identity<MegaenvironmentsourceRecord, Integer> IDENTITY_MEGAENVIRONMENTSOURCE = Identities0.IDENTITY_MEGAENVIRONMENTSOURCE;
    public static final Identity<NewsRecord, Integer> IDENTITY_NEWS = Identities0.IDENTITY_NEWS;
    public static final Identity<NewstypesRecord, Integer> IDENTITY_NEWSTYPES = Identities0.IDENTITY_NEWSTYPES;
    public static final Identity<PedigreedefinitionsRecord, Integer> IDENTITY_PEDIGREEDEFINITIONS = Identities0.IDENTITY_PEDIGREEDEFINITIONS;
    public static final Identity<PedigreedescriptionsRecord, Integer> IDENTITY_PEDIGREEDESCRIPTIONS = Identities0.IDENTITY_PEDIGREEDESCRIPTIONS;
    public static final Identity<PedigreenotationsRecord, Integer> IDENTITY_PEDIGREENOTATIONS = Identities0.IDENTITY_PEDIGREENOTATIONS;
    public static final Identity<PedigreesRecord, Integer> IDENTITY_PEDIGREES = Identities0.IDENTITY_PEDIGREES;
    public static final Identity<PhenotypedataRecord, Integer> IDENTITY_PHENOTYPEDATA = Identities0.IDENTITY_PHENOTYPEDATA;
    public static final Identity<PhenotypesRecord, Integer> IDENTITY_PHENOTYPES = Identities0.IDENTITY_PHENOTYPES;
    public static final Identity<StoragedataRecord, Integer> IDENTITY_STORAGEDATA = Identities0.IDENTITY_STORAGEDATA;
    public static final Identity<SynonymsRecord, Integer> IDENTITY_SYNONYMS = Identities0.IDENTITY_SYNONYMS;
    public static final Identity<SynonymtypesRecord, Integer> IDENTITY_SYNONYMTYPES = Identities0.IDENTITY_SYNONYMTYPES;
    public static final Identity<TaxonomiesRecord, Integer> IDENTITY_TAXONOMIES = Identities0.IDENTITY_TAXONOMIES;
    public static final Identity<TreatmentsRecord, Integer> IDENTITY_TREATMENTS = Identities0.IDENTITY_TREATMENTS;
    public static final Identity<TrialseriesRecord, Integer> IDENTITY_TRIALSERIES = Identities0.IDENTITY_TRIALSERIES;
    public static final Identity<UnitsRecord, Integer> IDENTITY_UNITS = Identities0.IDENTITY_UNITS;
    public static final Identity<UsergroupmembersRecord, Integer> IDENTITY_USERGROUPMEMBERS = Identities0.IDENTITY_USERGROUPMEMBERS;
    public static final Identity<UsergroupsRecord, Integer> IDENTITY_USERGROUPS = Identities0.IDENTITY_USERGROUPS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnalysismethodsRecord> KEY_ANALYSISMETHODS_PRIMARY = UniqueKeys0.KEY_ANALYSISMETHODS_PRIMARY;
    public static final UniqueKey<AttributedataRecord> KEY_ATTRIBUTEDATA_PRIMARY = UniqueKeys0.KEY_ATTRIBUTEDATA_PRIMARY;
    public static final UniqueKey<AttributesRecord> KEY_ATTRIBUTES_PRIMARY = UniqueKeys0.KEY_ATTRIBUTES_PRIMARY;
    public static final UniqueKey<BiologicalstatusRecord> KEY_BIOLOGICALSTATUS_PRIMARY = UniqueKeys0.KEY_BIOLOGICALSTATUS_PRIMARY;
    public static final UniqueKey<ClimatedataRecord> KEY_CLIMATEDATA_PRIMARY = UniqueKeys0.KEY_CLIMATEDATA_PRIMARY;
    public static final UniqueKey<ClimateoverlaysRecord> KEY_CLIMATEOVERLAYS_PRIMARY = UniqueKeys0.KEY_CLIMATEOVERLAYS_PRIMARY;
    public static final UniqueKey<ClimatesRecord> KEY_CLIMATES_PRIMARY = UniqueKeys0.KEY_CLIMATES_PRIMARY;
    public static final UniqueKey<CollaboratorsRecord> KEY_COLLABORATORS_PRIMARY = UniqueKeys0.KEY_COLLABORATORS_PRIMARY;
    public static final UniqueKey<CollectingsourcesRecord> KEY_COLLECTINGSOURCES_PRIMARY = UniqueKeys0.KEY_COLLECTINGSOURCES_PRIMARY;
    public static final UniqueKey<CommentsRecord> KEY_COMMENTS_PRIMARY = UniqueKeys0.KEY_COMMENTS_PRIMARY;
    public static final UniqueKey<CommenttypesRecord> KEY_COMMENTTYPES_PRIMARY = UniqueKeys0.KEY_COMMENTTYPES_PRIMARY;
    public static final UniqueKey<CompounddataRecord> KEY_COMPOUNDDATA_PRIMARY = UniqueKeys0.KEY_COMPOUNDDATA_PRIMARY;
    public static final UniqueKey<CompoundsRecord> KEY_COMPOUNDS_PRIMARY = UniqueKeys0.KEY_COMPOUNDS_PRIMARY;
    public static final UniqueKey<CountriesRecord> KEY_COUNTRIES_PRIMARY = UniqueKeys0.KEY_COUNTRIES_PRIMARY;
    public static final UniqueKey<DatasetaccesslogsRecord> KEY_DATASETACCESSLOGS_PRIMARY = UniqueKeys0.KEY_DATASETACCESSLOGS_PRIMARY;
    public static final UniqueKey<DatasetcollaboratorsRecord> KEY_DATASETCOLLABORATORS_PRIMARY = UniqueKeys0.KEY_DATASETCOLLABORATORS_PRIMARY;
    public static final UniqueKey<DatasetmembersRecord> KEY_DATASETMEMBERS_PRIMARY = UniqueKeys0.KEY_DATASETMEMBERS_PRIMARY;
    public static final UniqueKey<DatasetmembertypesRecord> KEY_DATASETMEMBERTYPES_PRIMARY = UniqueKeys0.KEY_DATASETMEMBERTYPES_PRIMARY;
    public static final UniqueKey<DatasetmetaRecord> KEY_DATASETMETA_PRIMARY = UniqueKeys0.KEY_DATASETMETA_PRIMARY;
    public static final UniqueKey<DatasetpermissionsRecord> KEY_DATASETPERMISSIONS_PRIMARY = UniqueKeys0.KEY_DATASETPERMISSIONS_PRIMARY;
    public static final UniqueKey<DatasetsRecord> KEY_DATASETS_PRIMARY = UniqueKeys0.KEY_DATASETS_PRIMARY;
    public static final UniqueKey<DatasetstatesRecord> KEY_DATASETSTATES_PRIMARY = UniqueKeys0.KEY_DATASETSTATES_PRIMARY;
    public static final UniqueKey<EntitytypesRecord> KEY_ENTITYTYPES_PRIMARY = UniqueKeys0.KEY_ENTITYTYPES_PRIMARY;
    public static final UniqueKey<ExperimentsRecord> KEY_EXPERIMENTS_PRIMARY = UniqueKeys0.KEY_EXPERIMENTS_PRIMARY;
    public static final UniqueKey<ExperimenttypesRecord> KEY_EXPERIMENTTYPES_PRIMARY = UniqueKeys0.KEY_EXPERIMENTTYPES_PRIMARY;
    public static final UniqueKey<GerminatebaseRecord> KEY_GERMINATEBASE_PRIMARY = UniqueKeys0.KEY_GERMINATEBASE_PRIMARY;
    public static final UniqueKey<GroupmembersRecord> KEY_GROUPMEMBERS_PRIMARY = UniqueKeys0.KEY_GROUPMEMBERS_PRIMARY;
    public static final UniqueKey<GroupsRecord> KEY_GROUPS_PRIMARY = UniqueKeys0.KEY_GROUPS_PRIMARY;
    public static final UniqueKey<GrouptypesRecord> KEY_GROUPTYPES_PRIMARY = UniqueKeys0.KEY_GROUPTYPES_PRIMARY;
    public static final UniqueKey<ImagesRecord> KEY_IMAGES_PRIMARY = UniqueKeys0.KEY_IMAGES_PRIMARY;
    public static final UniqueKey<ImagetypesRecord> KEY_IMAGETYPES_PRIMARY = UniqueKeys0.KEY_IMAGETYPES_PRIMARY;
    public static final UniqueKey<InstitutionsRecord> KEY_INSTITUTIONS_PRIMARY = UniqueKeys0.KEY_INSTITUTIONS_PRIMARY;
    public static final UniqueKey<LicensedataRecord> KEY_LICENSEDATA_PRIMARY = UniqueKeys0.KEY_LICENSEDATA_PRIMARY;
    public static final UniqueKey<LicenselogsRecord> KEY_LICENSELOGS_PRIMARY = UniqueKeys0.KEY_LICENSELOGS_PRIMARY;
    public static final UniqueKey<LicensesRecord> KEY_LICENSES_PRIMARY = UniqueKeys0.KEY_LICENSES_PRIMARY;
    public static final UniqueKey<LinksRecord> KEY_LINKS_PRIMARY = UniqueKeys0.KEY_LINKS_PRIMARY;
    public static final UniqueKey<LinktypesRecord> KEY_LINKTYPES_PRIMARY = UniqueKeys0.KEY_LINKTYPES_PRIMARY;
    public static final UniqueKey<LocalesRecord> KEY_LOCALES_PRIMARY = UniqueKeys0.KEY_LOCALES_PRIMARY;
    public static final UniqueKey<LocationsRecord> KEY_LOCATIONS_PRIMARY = UniqueKeys0.KEY_LOCATIONS_PRIMARY;
    public static final UniqueKey<LocationtypesRecord> KEY_LOCATIONTYPES_PRIMARY = UniqueKeys0.KEY_LOCATIONTYPES_PRIMARY;
    public static final UniqueKey<MapdefinitionsRecord> KEY_MAPDEFINITIONS_PRIMARY = UniqueKeys0.KEY_MAPDEFINITIONS_PRIMARY;
    public static final UniqueKey<MapfeaturetypesRecord> KEY_MAPFEATURETYPES_PRIMARY = UniqueKeys0.KEY_MAPFEATURETYPES_PRIMARY;
    public static final UniqueKey<MapsRecord> KEY_MAPS_PRIMARY = UniqueKeys0.KEY_MAPS_PRIMARY;
    public static final UniqueKey<MarkersRecord> KEY_MARKERS_PRIMARY = UniqueKeys0.KEY_MARKERS_PRIMARY;
    public static final UniqueKey<MarkertypesRecord> KEY_MARKERTYPES_PRIMARY = UniqueKeys0.KEY_MARKERTYPES_PRIMARY;
    public static final UniqueKey<MegaenvironmentdataRecord> KEY_MEGAENVIRONMENTDATA_PRIMARY = UniqueKeys0.KEY_MEGAENVIRONMENTDATA_PRIMARY;
    public static final UniqueKey<MegaenvironmentsRecord> KEY_MEGAENVIRONMENTS_PRIMARY = UniqueKeys0.KEY_MEGAENVIRONMENTS_PRIMARY;
    public static final UniqueKey<MegaenvironmentsourceRecord> KEY_MEGAENVIRONMENTSOURCE_PRIMARY = UniqueKeys0.KEY_MEGAENVIRONMENTSOURCE_PRIMARY;
    public static final UniqueKey<MlsstatusRecord> KEY_MLSSTATUS_PRIMARY = UniqueKeys0.KEY_MLSSTATUS_PRIMARY;
    public static final UniqueKey<NewsRecord> KEY_NEWS_PRIMARY = UniqueKeys0.KEY_NEWS_PRIMARY;
    public static final UniqueKey<NewstypesRecord> KEY_NEWSTYPES_PRIMARY = UniqueKeys0.KEY_NEWSTYPES_PRIMARY;
    public static final UniqueKey<PedigreedefinitionsRecord> KEY_PEDIGREEDEFINITIONS_PRIMARY = UniqueKeys0.KEY_PEDIGREEDEFINITIONS_PRIMARY;
    public static final UniqueKey<PedigreedescriptionsRecord> KEY_PEDIGREEDESCRIPTIONS_PRIMARY = UniqueKeys0.KEY_PEDIGREEDESCRIPTIONS_PRIMARY;
    public static final UniqueKey<PedigreenotationsRecord> KEY_PEDIGREENOTATIONS_PRIMARY = UniqueKeys0.KEY_PEDIGREENOTATIONS_PRIMARY;
    public static final UniqueKey<PedigreesRecord> KEY_PEDIGREES_PRIMARY = UniqueKeys0.KEY_PEDIGREES_PRIMARY;
    public static final UniqueKey<PhenotypedataRecord> KEY_PHENOTYPEDATA_PRIMARY = UniqueKeys0.KEY_PHENOTYPEDATA_PRIMARY;
    public static final UniqueKey<PhenotypesRecord> KEY_PHENOTYPES_PRIMARY = UniqueKeys0.KEY_PHENOTYPES_PRIMARY;
    public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = UniqueKeys0.KEY_SCHEMA_VERSION_PRIMARY;
    public static final UniqueKey<StorageRecord> KEY_STORAGE_PRIMARY = UniqueKeys0.KEY_STORAGE_PRIMARY;
    public static final UniqueKey<StoragedataRecord> KEY_STORAGEDATA_PRIMARY = UniqueKeys0.KEY_STORAGEDATA_PRIMARY;
    public static final UniqueKey<SynonymsRecord> KEY_SYNONYMS_PRIMARY = UniqueKeys0.KEY_SYNONYMS_PRIMARY;
    public static final UniqueKey<SynonymtypesRecord> KEY_SYNONYMTYPES_PRIMARY = UniqueKeys0.KEY_SYNONYMTYPES_PRIMARY;
    public static final UniqueKey<TaxonomiesRecord> KEY_TAXONOMIES_PRIMARY = UniqueKeys0.KEY_TAXONOMIES_PRIMARY;
    public static final UniqueKey<TreatmentsRecord> KEY_TREATMENTS_PRIMARY = UniqueKeys0.KEY_TREATMENTS_PRIMARY;
    public static final UniqueKey<TrialseriesRecord> KEY_TRIALSERIES_PRIMARY = UniqueKeys0.KEY_TRIALSERIES_PRIMARY;
    public static final UniqueKey<UnitsRecord> KEY_UNITS_PRIMARY = UniqueKeys0.KEY_UNITS_PRIMARY;
    public static final UniqueKey<UsergroupmembersRecord> KEY_USERGROUPMEMBERS_PRIMARY = UniqueKeys0.KEY_USERGROUPMEMBERS_PRIMARY;
    public static final UniqueKey<UsergroupsRecord> KEY_USERGROUPS_PRIMARY = UniqueKeys0.KEY_USERGROUPS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AttributedataRecord, AttributesRecord> ATTRIBUTEDATA_IBFK_1 = ForeignKeys0.ATTRIBUTEDATA_IBFK_1;
    public static final ForeignKey<ClimatedataRecord, ClimatesRecord> CLIMATEDATA_IBFK_2 = ForeignKeys0.CLIMATEDATA_IBFK_2;
    public static final ForeignKey<ClimatedataRecord, LocationsRecord> CLIMATEDATA_IBFK_3 = ForeignKeys0.CLIMATEDATA_IBFK_3;
    public static final ForeignKey<ClimatedataRecord, DatasetsRecord> CLIMATEDATA_IBFK_1 = ForeignKeys0.CLIMATEDATA_IBFK_1;
    public static final ForeignKey<ClimateoverlaysRecord, ClimatesRecord> CLIMATEOVERLAYS_IBFK_1 = ForeignKeys0.CLIMATEOVERLAYS_IBFK_1;
    public static final ForeignKey<ClimatesRecord, UnitsRecord> CLIMATES_IBFK_1 = ForeignKeys0.CLIMATES_IBFK_1;
    public static final ForeignKey<CollaboratorsRecord, InstitutionsRecord> COLLABORATORS_IBFK_1 = ForeignKeys0.COLLABORATORS_IBFK_1;
    public static final ForeignKey<CommentsRecord, CommenttypesRecord> COMMENTS_IBFK_1 = ForeignKeys0.COMMENTS_IBFK_1;
    public static final ForeignKey<CompounddataRecord, CompoundsRecord> COMPOUNDDATA_IBFK_2 = ForeignKeys0.COMPOUNDDATA_IBFK_2;
    public static final ForeignKey<CompounddataRecord, GerminatebaseRecord> COMPOUNDDATA_IBFK_4 = ForeignKeys0.COMPOUNDDATA_IBFK_4;
    public static final ForeignKey<CompounddataRecord, DatasetsRecord> COMPOUNDDATA_IBFK_3 = ForeignKeys0.COMPOUNDDATA_IBFK_3;
    public static final ForeignKey<CompounddataRecord, AnalysismethodsRecord> COMPOUNDDATA_IBFK_1 = ForeignKeys0.COMPOUNDDATA_IBFK_1;
    public static final ForeignKey<CompoundsRecord, UnitsRecord> COMPOUNDS_IBFK_1 = ForeignKeys0.COMPOUNDS_IBFK_1;
    public static final ForeignKey<DatasetaccesslogsRecord, DatasetsRecord> DATASETACCESSLOGS_IBFK_1 = ForeignKeys0.DATASETACCESSLOGS_IBFK_1;
    public static final ForeignKey<DatasetcollaboratorsRecord, DatasetsRecord> DATASETCOLLABORATORS_IBFK_1 = ForeignKeys0.DATASETCOLLABORATORS_IBFK_1;
    public static final ForeignKey<DatasetcollaboratorsRecord, CollaboratorsRecord> DATASETCOLLABORATORS_IBFK_2 = ForeignKeys0.DATASETCOLLABORATORS_IBFK_2;
    public static final ForeignKey<DatasetmembersRecord, DatasetsRecord> DATASETMEMBERS_IBFK_1 = ForeignKeys0.DATASETMEMBERS_IBFK_1;
    public static final ForeignKey<DatasetmembersRecord, DatasetmembertypesRecord> DATASETMEMBERS_IBFK_2 = ForeignKeys0.DATASETMEMBERS_IBFK_2;
    public static final ForeignKey<DatasetmetaRecord, DatasetsRecord> DATASETMETA_IBFK_1 = ForeignKeys0.DATASETMETA_IBFK_1;
    public static final ForeignKey<DatasetpermissionsRecord, DatasetsRecord> DATASETPERMISSIONS_IBFK_1 = ForeignKeys0.DATASETPERMISSIONS_IBFK_1;
    public static final ForeignKey<DatasetpermissionsRecord, UsergroupsRecord> DATASETPERMISSIONS_IBFK_2 = ForeignKeys0.DATASETPERMISSIONS_IBFK_2;
    public static final ForeignKey<DatasetsRecord, ExperimentsRecord> DATASETS_IBFK_1 = ForeignKeys0.DATASETS_IBFK_1;
    public static final ForeignKey<DatasetsRecord, LocationsRecord> DATASETS_IBFK_3 = ForeignKeys0.DATASETS_IBFK_3;
    public static final ForeignKey<DatasetsRecord, DatasetstatesRecord> DATASETS_IBFK_2 = ForeignKeys0.DATASETS_IBFK_2;
    public static final ForeignKey<DatasetsRecord, LicensesRecord> DATASETS_IBFK_4 = ForeignKeys0.DATASETS_IBFK_4;
    public static final ForeignKey<ExperimentsRecord, ExperimenttypesRecord> EXPERIMENTS_IBFK_1 = ForeignKeys0.EXPERIMENTS_IBFK_1;
    public static final ForeignKey<GerminatebaseRecord, TaxonomiesRecord> GERMINATEBASE_IBFK_TAXONOMY = ForeignKeys0.GERMINATEBASE_IBFK_TAXONOMY;
    public static final ForeignKey<GerminatebaseRecord, InstitutionsRecord> GERMINATEBASE_IBFK_INSTITUTION = ForeignKeys0.GERMINATEBASE_IBFK_INSTITUTION;
    public static final ForeignKey<GerminatebaseRecord, MlsstatusRecord> GERMINATEBASE_IBFK_MLSSTATUS = ForeignKeys0.GERMINATEBASE_IBFK_MLSSTATUS;
    public static final ForeignKey<GerminatebaseRecord, BiologicalstatusRecord> GERMINATEBASE_IBFK_BIOLOGICALSTATUS = ForeignKeys0.GERMINATEBASE_IBFK_BIOLOGICALSTATUS;
    public static final ForeignKey<GerminatebaseRecord, CollectingsourcesRecord> GERMINATEBASE_IBFK_COLLSRC = ForeignKeys0.GERMINATEBASE_IBFK_COLLSRC;
    public static final ForeignKey<GerminatebaseRecord, LocationsRecord> GERMINATEBASE_IBFK_LOCATION = ForeignKeys0.GERMINATEBASE_IBFK_LOCATION;
    public static final ForeignKey<GerminatebaseRecord, EntitytypesRecord> GERMINATEBASE_IBFK_ENTITYTYPE = ForeignKeys0.GERMINATEBASE_IBFK_ENTITYTYPE;
    public static final ForeignKey<GerminatebaseRecord, GerminatebaseRecord> GERMINATEBASE_IBFK_ENTITYPARENT = ForeignKeys0.GERMINATEBASE_IBFK_ENTITYPARENT;
    public static final ForeignKey<GroupmembersRecord, GroupsRecord> GROUPMEMBERS_IBFK_1 = ForeignKeys0.GROUPMEMBERS_IBFK_1;
    public static final ForeignKey<GroupsRecord, GrouptypesRecord> GROUPS_IBFK_1 = ForeignKeys0.GROUPS_IBFK_1;
    public static final ForeignKey<ImagesRecord, ImagetypesRecord> IMAGES_IBFK_1 = ForeignKeys0.IMAGES_IBFK_1;
    public static final ForeignKey<InstitutionsRecord, CountriesRecord> INSTITUTIONS_IBFK_1 = ForeignKeys0.INSTITUTIONS_IBFK_1;
    public static final ForeignKey<LicensedataRecord, LicensesRecord> LICENSEDATA_IBFK_1 = ForeignKeys0.LICENSEDATA_IBFK_1;
    public static final ForeignKey<LicensedataRecord, LocalesRecord> LICENSEDATA_IBFK_2 = ForeignKeys0.LICENSEDATA_IBFK_2;
    public static final ForeignKey<LicenselogsRecord, LicensesRecord> LICENSELOGS_IBFK_1 = ForeignKeys0.LICENSELOGS_IBFK_1;
    public static final ForeignKey<LinksRecord, LinktypesRecord> LINKS_IBFK_1 = ForeignKeys0.LINKS_IBFK_1;
    public static final ForeignKey<LocationsRecord, LocationtypesRecord> LOCATIONS_IBFK_2 = ForeignKeys0.LOCATIONS_IBFK_2;
    public static final ForeignKey<LocationsRecord, CountriesRecord> LOCATIONS_IBFK_1 = ForeignKeys0.LOCATIONS_IBFK_1;
    public static final ForeignKey<MapdefinitionsRecord, MapfeaturetypesRecord> MAPDEFINITIONS_IBFK_1 = ForeignKeys0.MAPDEFINITIONS_IBFK_1;
    public static final ForeignKey<MapdefinitionsRecord, MarkersRecord> MAPDEFINITIONS_IBFK_2 = ForeignKeys0.MAPDEFINITIONS_IBFK_2;
    public static final ForeignKey<MapdefinitionsRecord, MapsRecord> MAPDEFINITIONS_IBFK_3 = ForeignKeys0.MAPDEFINITIONS_IBFK_3;
    public static final ForeignKey<MarkersRecord, MarkertypesRecord> MARKERS_IBFK_1 = ForeignKeys0.MARKERS_IBFK_1;
    public static final ForeignKey<MegaenvironmentdataRecord, LocationsRecord> MEGAENVIRONMENTDATA_IBFK_3 = ForeignKeys0.MEGAENVIRONMENTDATA_IBFK_3;
    public static final ForeignKey<MegaenvironmentdataRecord, MegaenvironmentsourceRecord> MEGAENVIRONMENTDATA_IBFK_2 = ForeignKeys0.MEGAENVIRONMENTDATA_IBFK_2;
    public static final ForeignKey<MegaenvironmentdataRecord, MegaenvironmentsRecord> MEGAENVIRONMENTDATA_IBFK_1 = ForeignKeys0.MEGAENVIRONMENTDATA_IBFK_1;
    public static final ForeignKey<NewsRecord, NewstypesRecord> NEWS_IBFK_1 = ForeignKeys0.NEWS_IBFK_1;
    public static final ForeignKey<PedigreedefinitionsRecord, GerminatebaseRecord> PEDIGREEDEFINITIONS_IBFK_1 = ForeignKeys0.PEDIGREEDEFINITIONS_IBFK_1;
    public static final ForeignKey<PedigreedefinitionsRecord, PedigreenotationsRecord> PEDIGREEDEFINITIONS_IBFK_2 = ForeignKeys0.PEDIGREEDEFINITIONS_IBFK_2;
    public static final ForeignKey<PedigreedefinitionsRecord, PedigreedescriptionsRecord> PEDIGREEDEFINITIONS_IBFK_3 = ForeignKeys0.PEDIGREEDEFINITIONS_IBFK_3;
    public static final ForeignKey<PedigreesRecord, GerminatebaseRecord> PEDIGREES_IBFK_1 = ForeignKeys0.PEDIGREES_IBFK_1;
    public static final ForeignKey<PedigreesRecord, GerminatebaseRecord> PEDIGREES_IBFK_2 = ForeignKeys0.PEDIGREES_IBFK_2;
    public static final ForeignKey<PedigreesRecord, PedigreedescriptionsRecord> PEDIGREES_IBFK_3 = ForeignKeys0.PEDIGREES_IBFK_3;
    public static final ForeignKey<PhenotypedataRecord, PhenotypesRecord> PHENOTYPEDATA_IBFK_2 = ForeignKeys0.PHENOTYPEDATA_IBFK_2;
    public static final ForeignKey<PhenotypedataRecord, GerminatebaseRecord> PHENOTYPEDATA_IBFK_3 = ForeignKeys0.PHENOTYPEDATA_IBFK_3;
    public static final ForeignKey<PhenotypedataRecord, DatasetsRecord> PHENOTYPEDATA_IBFK_1 = ForeignKeys0.PHENOTYPEDATA_IBFK_1;
    public static final ForeignKey<PhenotypedataRecord, LocationsRecord> PHENOTYPEDATA_IBFK_4 = ForeignKeys0.PHENOTYPEDATA_IBFK_4;
    public static final ForeignKey<PhenotypedataRecord, TreatmentsRecord> PHENOTYPEDATA_IBFK_5 = ForeignKeys0.PHENOTYPEDATA_IBFK_5;
    public static final ForeignKey<PhenotypedataRecord, TrialseriesRecord> PHENOTYPEDATA_IBFK_6 = ForeignKeys0.PHENOTYPEDATA_IBFK_6;
    public static final ForeignKey<PhenotypesRecord, UnitsRecord> PHENOTYPES_IBFK_1 = ForeignKeys0.PHENOTYPES_IBFK_1;
    public static final ForeignKey<StoragedataRecord, GerminatebaseRecord> STORAGEDATA_IBFK_1 = ForeignKeys0.STORAGEDATA_IBFK_1;
    public static final ForeignKey<StoragedataRecord, StorageRecord> STORAGEDATA_IBFK_2 = ForeignKeys0.STORAGEDATA_IBFK_2;
    public static final ForeignKey<SynonymsRecord, SynonymtypesRecord> SYNONYMS_IBFK_1 = ForeignKeys0.SYNONYMS_IBFK_1;
    public static final ForeignKey<UsergroupmembersRecord, UsergroupsRecord> USERGROUPMEMBERS_IBFK_1 = ForeignKeys0.USERGROUPMEMBERS_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AnalysismethodsRecord, Integer> IDENTITY_ANALYSISMETHODS = Internal.createIdentity(Analysismethods.ANALYSISMETHODS, Analysismethods.ANALYSISMETHODS.ID);
        public static Identity<AttributedataRecord, Integer> IDENTITY_ATTRIBUTEDATA = Internal.createIdentity(Attributedata.ATTRIBUTEDATA, Attributedata.ATTRIBUTEDATA.ID);
        public static Identity<AttributesRecord, Integer> IDENTITY_ATTRIBUTES = Internal.createIdentity(Attributes.ATTRIBUTES, Attributes.ATTRIBUTES.ID);
        public static Identity<BiologicalstatusRecord, Integer> IDENTITY_BIOLOGICALSTATUS = Internal.createIdentity(Biologicalstatus.BIOLOGICALSTATUS, Biologicalstatus.BIOLOGICALSTATUS.ID);
        public static Identity<ClimatedataRecord, Integer> IDENTITY_CLIMATEDATA = Internal.createIdentity(Climatedata.CLIMATEDATA, Climatedata.CLIMATEDATA.ID);
        public static Identity<ClimateoverlaysRecord, Integer> IDENTITY_CLIMATEOVERLAYS = Internal.createIdentity(Climateoverlays.CLIMATEOVERLAYS, Climateoverlays.CLIMATEOVERLAYS.ID);
        public static Identity<ClimatesRecord, Integer> IDENTITY_CLIMATES = Internal.createIdentity(Climates.CLIMATES, Climates.CLIMATES.ID);
        public static Identity<CollaboratorsRecord, Integer> IDENTITY_COLLABORATORS = Internal.createIdentity(Collaborators.COLLABORATORS, Collaborators.COLLABORATORS.ID);
        public static Identity<CollectingsourcesRecord, Integer> IDENTITY_COLLECTINGSOURCES = Internal.createIdentity(Collectingsources.COLLECTINGSOURCES, Collectingsources.COLLECTINGSOURCES.ID);
        public static Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = Internal.createIdentity(Comments.COMMENTS, Comments.COMMENTS.ID);
        public static Identity<CommenttypesRecord, Integer> IDENTITY_COMMENTTYPES = Internal.createIdentity(Commenttypes.COMMENTTYPES, Commenttypes.COMMENTTYPES.ID);
        public static Identity<CompounddataRecord, Integer> IDENTITY_COMPOUNDDATA = Internal.createIdentity(Compounddata.COMPOUNDDATA, Compounddata.COMPOUNDDATA.ID);
        public static Identity<CompoundsRecord, Integer> IDENTITY_COMPOUNDS = Internal.createIdentity(Compounds.COMPOUNDS, Compounds.COMPOUNDS.ID);
        public static Identity<CountriesRecord, Integer> IDENTITY_COUNTRIES = Internal.createIdentity(Countries.COUNTRIES, Countries.COUNTRIES.ID);
        public static Identity<DatasetaccesslogsRecord, Integer> IDENTITY_DATASETACCESSLOGS = Internal.createIdentity(Datasetaccesslogs.DATASETACCESSLOGS, Datasetaccesslogs.DATASETACCESSLOGS.ID);
        public static Identity<DatasetcollaboratorsRecord, Integer> IDENTITY_DATASETCOLLABORATORS = Internal.createIdentity(Datasetcollaborators.DATASETCOLLABORATORS, Datasetcollaborators.DATASETCOLLABORATORS.ID);
        public static Identity<DatasetmembersRecord, Integer> IDENTITY_DATASETMEMBERS = Internal.createIdentity(Datasetmembers.DATASETMEMBERS, Datasetmembers.DATASETMEMBERS.ID);
        public static Identity<DatasetmembertypesRecord, Integer> IDENTITY_DATASETMEMBERTYPES = Internal.createIdentity(Datasetmembertypes.DATASETMEMBERTYPES, Datasetmembertypes.DATASETMEMBERTYPES.ID);
        public static Identity<DatasetmetaRecord, Integer> IDENTITY_DATASETMETA = Internal.createIdentity(Datasetmeta.DATASETMETA, Datasetmeta.DATASETMETA.ID);
        public static Identity<DatasetpermissionsRecord, Integer> IDENTITY_DATASETPERMISSIONS = Internal.createIdentity(Datasetpermissions.DATASETPERMISSIONS, Datasetpermissions.DATASETPERMISSIONS.ID);
        public static Identity<DatasetsRecord, Integer> IDENTITY_DATASETS = Internal.createIdentity(Datasets.DATASETS, Datasets.DATASETS.ID);
        public static Identity<DatasetstatesRecord, Integer> IDENTITY_DATASETSTATES = Internal.createIdentity(Datasetstates.DATASETSTATES, Datasetstates.DATASETSTATES.ID);
        public static Identity<EntitytypesRecord, Integer> IDENTITY_ENTITYTYPES = Internal.createIdentity(Entitytypes.ENTITYTYPES, Entitytypes.ENTITYTYPES.ID);
        public static Identity<ExperimentsRecord, Integer> IDENTITY_EXPERIMENTS = Internal.createIdentity(Experiments.EXPERIMENTS, Experiments.EXPERIMENTS.ID);
        public static Identity<ExperimenttypesRecord, Integer> IDENTITY_EXPERIMENTTYPES = Internal.createIdentity(Experimenttypes.EXPERIMENTTYPES, Experimenttypes.EXPERIMENTTYPES.ID);
        public static Identity<GerminatebaseRecord, Integer> IDENTITY_GERMINATEBASE = Internal.createIdentity(Germinatebase.GERMINATEBASE, Germinatebase.GERMINATEBASE.ID);
        public static Identity<GroupmembersRecord, Integer> IDENTITY_GROUPMEMBERS = Internal.createIdentity(Groupmembers.GROUPMEMBERS, Groupmembers.GROUPMEMBERS.ID);
        public static Identity<GroupsRecord, Integer> IDENTITY_GROUPS = Internal.createIdentity(Groups.GROUPS, Groups.GROUPS.ID);
        public static Identity<GrouptypesRecord, Integer> IDENTITY_GROUPTYPES = Internal.createIdentity(Grouptypes.GROUPTYPES, Grouptypes.GROUPTYPES.ID);
        public static Identity<ImagesRecord, Integer> IDENTITY_IMAGES = Internal.createIdentity(Images.IMAGES, Images.IMAGES.ID);
        public static Identity<ImagetypesRecord, Integer> IDENTITY_IMAGETYPES = Internal.createIdentity(Imagetypes.IMAGETYPES, Imagetypes.IMAGETYPES.ID);
        public static Identity<InstitutionsRecord, Integer> IDENTITY_INSTITUTIONS = Internal.createIdentity(Institutions.INSTITUTIONS, Institutions.INSTITUTIONS.ID);
        public static Identity<LicensedataRecord, Integer> IDENTITY_LICENSEDATA = Internal.createIdentity(Licensedata.LICENSEDATA, Licensedata.LICENSEDATA.ID);
        public static Identity<LicenselogsRecord, Integer> IDENTITY_LICENSELOGS = Internal.createIdentity(Licenselogs.LICENSELOGS, Licenselogs.LICENSELOGS.ID);
        public static Identity<LicensesRecord, Integer> IDENTITY_LICENSES = Internal.createIdentity(Licenses.LICENSES, Licenses.LICENSES.ID);
        public static Identity<LinksRecord, Integer> IDENTITY_LINKS = Internal.createIdentity(Links.LINKS, Links.LINKS.ID);
        public static Identity<LinktypesRecord, Integer> IDENTITY_LINKTYPES = Internal.createIdentity(Linktypes.LINKTYPES, Linktypes.LINKTYPES.ID);
        public static Identity<LocalesRecord, Integer> IDENTITY_LOCALES = Internal.createIdentity(Locales.LOCALES, Locales.LOCALES.ID);
        public static Identity<LocationsRecord, Integer> IDENTITY_LOCATIONS = Internal.createIdentity(Locations.LOCATIONS, Locations.LOCATIONS.ID);
        public static Identity<LocationtypesRecord, Integer> IDENTITY_LOCATIONTYPES = Internal.createIdentity(Locationtypes.LOCATIONTYPES, Locationtypes.LOCATIONTYPES.ID);
        public static Identity<MapdefinitionsRecord, Integer> IDENTITY_MAPDEFINITIONS = Internal.createIdentity(Mapdefinitions.MAPDEFINITIONS, Mapdefinitions.MAPDEFINITIONS.ID);
        public static Identity<MapfeaturetypesRecord, Integer> IDENTITY_MAPFEATURETYPES = Internal.createIdentity(Mapfeaturetypes.MAPFEATURETYPES, Mapfeaturetypes.MAPFEATURETYPES.ID);
        public static Identity<MapsRecord, Integer> IDENTITY_MAPS = Internal.createIdentity(Maps.MAPS, Maps.MAPS.ID);
        public static Identity<MarkersRecord, Integer> IDENTITY_MARKERS = Internal.createIdentity(Markers.MARKERS, Markers.MARKERS.ID);
        public static Identity<MarkertypesRecord, Integer> IDENTITY_MARKERTYPES = Internal.createIdentity(Markertypes.MARKERTYPES, Markertypes.MARKERTYPES.ID);
        public static Identity<MegaenvironmentdataRecord, Integer> IDENTITY_MEGAENVIRONMENTDATA = Internal.createIdentity(Megaenvironmentdata.MEGAENVIRONMENTDATA, Megaenvironmentdata.MEGAENVIRONMENTDATA.ID);
        public static Identity<MegaenvironmentsRecord, Integer> IDENTITY_MEGAENVIRONMENTS = Internal.createIdentity(Megaenvironments.MEGAENVIRONMENTS, Megaenvironments.MEGAENVIRONMENTS.ID);
        public static Identity<MegaenvironmentsourceRecord, Integer> IDENTITY_MEGAENVIRONMENTSOURCE = Internal.createIdentity(Megaenvironmentsource.MEGAENVIRONMENTSOURCE, Megaenvironmentsource.MEGAENVIRONMENTSOURCE.ID);
        public static Identity<NewsRecord, Integer> IDENTITY_NEWS = Internal.createIdentity(News.NEWS, News.NEWS.ID);
        public static Identity<NewstypesRecord, Integer> IDENTITY_NEWSTYPES = Internal.createIdentity(Newstypes.NEWSTYPES, Newstypes.NEWSTYPES.ID);
        public static Identity<PedigreedefinitionsRecord, Integer> IDENTITY_PEDIGREEDEFINITIONS = Internal.createIdentity(Pedigreedefinitions.PEDIGREEDEFINITIONS, Pedigreedefinitions.PEDIGREEDEFINITIONS.ID);
        public static Identity<PedigreedescriptionsRecord, Integer> IDENTITY_PEDIGREEDESCRIPTIONS = Internal.createIdentity(Pedigreedescriptions.PEDIGREEDESCRIPTIONS, Pedigreedescriptions.PEDIGREEDESCRIPTIONS.ID);
        public static Identity<PedigreenotationsRecord, Integer> IDENTITY_PEDIGREENOTATIONS = Internal.createIdentity(Pedigreenotations.PEDIGREENOTATIONS, Pedigreenotations.PEDIGREENOTATIONS.ID);
        public static Identity<PedigreesRecord, Integer> IDENTITY_PEDIGREES = Internal.createIdentity(Pedigrees.PEDIGREES, Pedigrees.PEDIGREES.ID);
        public static Identity<PhenotypedataRecord, Integer> IDENTITY_PHENOTYPEDATA = Internal.createIdentity(Phenotypedata.PHENOTYPEDATA, Phenotypedata.PHENOTYPEDATA.ID);
        public static Identity<PhenotypesRecord, Integer> IDENTITY_PHENOTYPES = Internal.createIdentity(Phenotypes.PHENOTYPES, Phenotypes.PHENOTYPES.ID);
        public static Identity<StoragedataRecord, Integer> IDENTITY_STORAGEDATA = Internal.createIdentity(Storagedata.STORAGEDATA, Storagedata.STORAGEDATA.ID);
        public static Identity<SynonymsRecord, Integer> IDENTITY_SYNONYMS = Internal.createIdentity(Synonyms.SYNONYMS, Synonyms.SYNONYMS.ID);
        public static Identity<SynonymtypesRecord, Integer> IDENTITY_SYNONYMTYPES = Internal.createIdentity(Synonymtypes.SYNONYMTYPES, Synonymtypes.SYNONYMTYPES.ID);
        public static Identity<TaxonomiesRecord, Integer> IDENTITY_TAXONOMIES = Internal.createIdentity(Taxonomies.TAXONOMIES, Taxonomies.TAXONOMIES.ID);
        public static Identity<TreatmentsRecord, Integer> IDENTITY_TREATMENTS = Internal.createIdentity(Treatments.TREATMENTS, Treatments.TREATMENTS.ID);
        public static Identity<TrialseriesRecord, Integer> IDENTITY_TRIALSERIES = Internal.createIdentity(Trialseries.TRIALSERIES, Trialseries.TRIALSERIES.ID);
        public static Identity<UnitsRecord, Integer> IDENTITY_UNITS = Internal.createIdentity(Units.UNITS, Units.UNITS.ID);
        public static Identity<UsergroupmembersRecord, Integer> IDENTITY_USERGROUPMEMBERS = Internal.createIdentity(Usergroupmembers.USERGROUPMEMBERS, Usergroupmembers.USERGROUPMEMBERS.ID);
        public static Identity<UsergroupsRecord, Integer> IDENTITY_USERGROUPS = Internal.createIdentity(Usergroups.USERGROUPS, Usergroups.USERGROUPS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AnalysismethodsRecord> KEY_ANALYSISMETHODS_PRIMARY = Internal.createUniqueKey(Analysismethods.ANALYSISMETHODS, "KEY_analysismethods_PRIMARY", Analysismethods.ANALYSISMETHODS.ID);
        public static final UniqueKey<AttributedataRecord> KEY_ATTRIBUTEDATA_PRIMARY = Internal.createUniqueKey(Attributedata.ATTRIBUTEDATA, "KEY_attributedata_PRIMARY", Attributedata.ATTRIBUTEDATA.ID);
        public static final UniqueKey<AttributesRecord> KEY_ATTRIBUTES_PRIMARY = Internal.createUniqueKey(Attributes.ATTRIBUTES, "KEY_attributes_PRIMARY", Attributes.ATTRIBUTES.ID);
        public static final UniqueKey<BiologicalstatusRecord> KEY_BIOLOGICALSTATUS_PRIMARY = Internal.createUniqueKey(Biologicalstatus.BIOLOGICALSTATUS, "KEY_biologicalstatus_PRIMARY", Biologicalstatus.BIOLOGICALSTATUS.ID);
        public static final UniqueKey<ClimatedataRecord> KEY_CLIMATEDATA_PRIMARY = Internal.createUniqueKey(Climatedata.CLIMATEDATA, "KEY_climatedata_PRIMARY", Climatedata.CLIMATEDATA.ID);
        public static final UniqueKey<ClimateoverlaysRecord> KEY_CLIMATEOVERLAYS_PRIMARY = Internal.createUniqueKey(Climateoverlays.CLIMATEOVERLAYS, "KEY_climateoverlays_PRIMARY", Climateoverlays.CLIMATEOVERLAYS.ID);
        public static final UniqueKey<ClimatesRecord> KEY_CLIMATES_PRIMARY = Internal.createUniqueKey(Climates.CLIMATES, "KEY_climates_PRIMARY", Climates.CLIMATES.ID);
        public static final UniqueKey<CollaboratorsRecord> KEY_COLLABORATORS_PRIMARY = Internal.createUniqueKey(Collaborators.COLLABORATORS, "KEY_collaborators_PRIMARY", Collaborators.COLLABORATORS.ID);
        public static final UniqueKey<CollectingsourcesRecord> KEY_COLLECTINGSOURCES_PRIMARY = Internal.createUniqueKey(Collectingsources.COLLECTINGSOURCES, "KEY_collectingsources_PRIMARY", Collectingsources.COLLECTINGSOURCES.ID);
        public static final UniqueKey<CommentsRecord> KEY_COMMENTS_PRIMARY = Internal.createUniqueKey(Comments.COMMENTS, "KEY_comments_PRIMARY", Comments.COMMENTS.ID);
        public static final UniqueKey<CommenttypesRecord> KEY_COMMENTTYPES_PRIMARY = Internal.createUniqueKey(Commenttypes.COMMENTTYPES, "KEY_commenttypes_PRIMARY", Commenttypes.COMMENTTYPES.ID);
        public static final UniqueKey<CompounddataRecord> KEY_COMPOUNDDATA_PRIMARY = Internal.createUniqueKey(Compounddata.COMPOUNDDATA, "KEY_compounddata_PRIMARY", Compounddata.COMPOUNDDATA.ID);
        public static final UniqueKey<CompoundsRecord> KEY_COMPOUNDS_PRIMARY = Internal.createUniqueKey(Compounds.COMPOUNDS, "KEY_compounds_PRIMARY", Compounds.COMPOUNDS.ID);
        public static final UniqueKey<CountriesRecord> KEY_COUNTRIES_PRIMARY = Internal.createUniqueKey(Countries.COUNTRIES, "KEY_countries_PRIMARY", Countries.COUNTRIES.ID);
        public static final UniqueKey<DatasetaccesslogsRecord> KEY_DATASETACCESSLOGS_PRIMARY = Internal.createUniqueKey(Datasetaccesslogs.DATASETACCESSLOGS, "KEY_datasetaccesslogs_PRIMARY", Datasetaccesslogs.DATASETACCESSLOGS.ID);
        public static final UniqueKey<DatasetcollaboratorsRecord> KEY_DATASETCOLLABORATORS_PRIMARY = Internal.createUniqueKey(Datasetcollaborators.DATASETCOLLABORATORS, "KEY_datasetcollaborators_PRIMARY", Datasetcollaborators.DATASETCOLLABORATORS.ID);
        public static final UniqueKey<DatasetmembersRecord> KEY_DATASETMEMBERS_PRIMARY = Internal.createUniqueKey(Datasetmembers.DATASETMEMBERS, "KEY_datasetmembers_PRIMARY", Datasetmembers.DATASETMEMBERS.ID);
        public static final UniqueKey<DatasetmembertypesRecord> KEY_DATASETMEMBERTYPES_PRIMARY = Internal.createUniqueKey(Datasetmembertypes.DATASETMEMBERTYPES, "KEY_datasetmembertypes_PRIMARY", Datasetmembertypes.DATASETMEMBERTYPES.ID);
        public static final UniqueKey<DatasetmetaRecord> KEY_DATASETMETA_PRIMARY = Internal.createUniqueKey(Datasetmeta.DATASETMETA, "KEY_datasetmeta_PRIMARY", Datasetmeta.DATASETMETA.ID);
        public static final UniqueKey<DatasetpermissionsRecord> KEY_DATASETPERMISSIONS_PRIMARY = Internal.createUniqueKey(Datasetpermissions.DATASETPERMISSIONS, "KEY_datasetpermissions_PRIMARY", Datasetpermissions.DATASETPERMISSIONS.ID);
        public static final UniqueKey<DatasetsRecord> KEY_DATASETS_PRIMARY = Internal.createUniqueKey(Datasets.DATASETS, "KEY_datasets_PRIMARY", Datasets.DATASETS.ID);
        public static final UniqueKey<DatasetstatesRecord> KEY_DATASETSTATES_PRIMARY = Internal.createUniqueKey(Datasetstates.DATASETSTATES, "KEY_datasetstates_PRIMARY", Datasetstates.DATASETSTATES.ID);
        public static final UniqueKey<EntitytypesRecord> KEY_ENTITYTYPES_PRIMARY = Internal.createUniqueKey(Entitytypes.ENTITYTYPES, "KEY_entitytypes_PRIMARY", Entitytypes.ENTITYTYPES.ID);
        public static final UniqueKey<ExperimentsRecord> KEY_EXPERIMENTS_PRIMARY = Internal.createUniqueKey(Experiments.EXPERIMENTS, "KEY_experiments_PRIMARY", Experiments.EXPERIMENTS.ID);
        public static final UniqueKey<ExperimenttypesRecord> KEY_EXPERIMENTTYPES_PRIMARY = Internal.createUniqueKey(Experimenttypes.EXPERIMENTTYPES, "KEY_experimenttypes_PRIMARY", Experimenttypes.EXPERIMENTTYPES.ID);
        public static final UniqueKey<GerminatebaseRecord> KEY_GERMINATEBASE_PRIMARY = Internal.createUniqueKey(Germinatebase.GERMINATEBASE, "KEY_germinatebase_PRIMARY", Germinatebase.GERMINATEBASE.ID);
        public static final UniqueKey<GroupmembersRecord> KEY_GROUPMEMBERS_PRIMARY = Internal.createUniqueKey(Groupmembers.GROUPMEMBERS, "KEY_groupmembers_PRIMARY", Groupmembers.GROUPMEMBERS.ID);
        public static final UniqueKey<GroupsRecord> KEY_GROUPS_PRIMARY = Internal.createUniqueKey(Groups.GROUPS, "KEY_groups_PRIMARY", Groups.GROUPS.ID);
        public static final UniqueKey<GrouptypesRecord> KEY_GROUPTYPES_PRIMARY = Internal.createUniqueKey(Grouptypes.GROUPTYPES, "KEY_grouptypes_PRIMARY", Grouptypes.GROUPTYPES.ID);
        public static final UniqueKey<ImagesRecord> KEY_IMAGES_PRIMARY = Internal.createUniqueKey(Images.IMAGES, "KEY_images_PRIMARY", Images.IMAGES.ID);
        public static final UniqueKey<ImagetypesRecord> KEY_IMAGETYPES_PRIMARY = Internal.createUniqueKey(Imagetypes.IMAGETYPES, "KEY_imagetypes_PRIMARY", Imagetypes.IMAGETYPES.ID);
        public static final UniqueKey<InstitutionsRecord> KEY_INSTITUTIONS_PRIMARY = Internal.createUniqueKey(Institutions.INSTITUTIONS, "KEY_institutions_PRIMARY", Institutions.INSTITUTIONS.ID);
        public static final UniqueKey<LicensedataRecord> KEY_LICENSEDATA_PRIMARY = Internal.createUniqueKey(Licensedata.LICENSEDATA, "KEY_licensedata_PRIMARY", Licensedata.LICENSEDATA.ID);
        public static final UniqueKey<LicenselogsRecord> KEY_LICENSELOGS_PRIMARY = Internal.createUniqueKey(Licenselogs.LICENSELOGS, "KEY_licenselogs_PRIMARY", Licenselogs.LICENSELOGS.ID);
        public static final UniqueKey<LicensesRecord> KEY_LICENSES_PRIMARY = Internal.createUniqueKey(Licenses.LICENSES, "KEY_licenses_PRIMARY", Licenses.LICENSES.ID);
        public static final UniqueKey<LinksRecord> KEY_LINKS_PRIMARY = Internal.createUniqueKey(Links.LINKS, "KEY_links_PRIMARY", Links.LINKS.ID);
        public static final UniqueKey<LinktypesRecord> KEY_LINKTYPES_PRIMARY = Internal.createUniqueKey(Linktypes.LINKTYPES, "KEY_linktypes_PRIMARY", Linktypes.LINKTYPES.ID);
        public static final UniqueKey<LocalesRecord> KEY_LOCALES_PRIMARY = Internal.createUniqueKey(Locales.LOCALES, "KEY_locales_PRIMARY", Locales.LOCALES.ID);
        public static final UniqueKey<LocationsRecord> KEY_LOCATIONS_PRIMARY = Internal.createUniqueKey(Locations.LOCATIONS, "KEY_locations_PRIMARY", Locations.LOCATIONS.ID);
        public static final UniqueKey<LocationtypesRecord> KEY_LOCATIONTYPES_PRIMARY = Internal.createUniqueKey(Locationtypes.LOCATIONTYPES, "KEY_locationtypes_PRIMARY", Locationtypes.LOCATIONTYPES.ID);
        public static final UniqueKey<MapdefinitionsRecord> KEY_MAPDEFINITIONS_PRIMARY = Internal.createUniqueKey(Mapdefinitions.MAPDEFINITIONS, "KEY_mapdefinitions_PRIMARY", Mapdefinitions.MAPDEFINITIONS.ID);
        public static final UniqueKey<MapfeaturetypesRecord> KEY_MAPFEATURETYPES_PRIMARY = Internal.createUniqueKey(Mapfeaturetypes.MAPFEATURETYPES, "KEY_mapfeaturetypes_PRIMARY", Mapfeaturetypes.MAPFEATURETYPES.ID);
        public static final UniqueKey<MapsRecord> KEY_MAPS_PRIMARY = Internal.createUniqueKey(Maps.MAPS, "KEY_maps_PRIMARY", Maps.MAPS.ID);
        public static final UniqueKey<MarkersRecord> KEY_MARKERS_PRIMARY = Internal.createUniqueKey(Markers.MARKERS, "KEY_markers_PRIMARY", Markers.MARKERS.ID);
        public static final UniqueKey<MarkertypesRecord> KEY_MARKERTYPES_PRIMARY = Internal.createUniqueKey(Markertypes.MARKERTYPES, "KEY_markertypes_PRIMARY", Markertypes.MARKERTYPES.ID);
        public static final UniqueKey<MegaenvironmentdataRecord> KEY_MEGAENVIRONMENTDATA_PRIMARY = Internal.createUniqueKey(Megaenvironmentdata.MEGAENVIRONMENTDATA, "KEY_megaenvironmentdata_PRIMARY", Megaenvironmentdata.MEGAENVIRONMENTDATA.ID);
        public static final UniqueKey<MegaenvironmentsRecord> KEY_MEGAENVIRONMENTS_PRIMARY = Internal.createUniqueKey(Megaenvironments.MEGAENVIRONMENTS, "KEY_megaenvironments_PRIMARY", Megaenvironments.MEGAENVIRONMENTS.ID);
        public static final UniqueKey<MegaenvironmentsourceRecord> KEY_MEGAENVIRONMENTSOURCE_PRIMARY = Internal.createUniqueKey(Megaenvironmentsource.MEGAENVIRONMENTSOURCE, "KEY_megaenvironmentsource_PRIMARY", Megaenvironmentsource.MEGAENVIRONMENTSOURCE.ID);
        public static final UniqueKey<MlsstatusRecord> KEY_MLSSTATUS_PRIMARY = Internal.createUniqueKey(Mlsstatus.MLSSTATUS, "KEY_mlsstatus_PRIMARY", Mlsstatus.MLSSTATUS.ID);
        public static final UniqueKey<NewsRecord> KEY_NEWS_PRIMARY = Internal.createUniqueKey(News.NEWS, "KEY_news_PRIMARY", News.NEWS.ID);
        public static final UniqueKey<NewstypesRecord> KEY_NEWSTYPES_PRIMARY = Internal.createUniqueKey(Newstypes.NEWSTYPES, "KEY_newstypes_PRIMARY", Newstypes.NEWSTYPES.ID);
        public static final UniqueKey<PedigreedefinitionsRecord> KEY_PEDIGREEDEFINITIONS_PRIMARY = Internal.createUniqueKey(Pedigreedefinitions.PEDIGREEDEFINITIONS, "KEY_pedigreedefinitions_PRIMARY", Pedigreedefinitions.PEDIGREEDEFINITIONS.ID);
        public static final UniqueKey<PedigreedescriptionsRecord> KEY_PEDIGREEDESCRIPTIONS_PRIMARY = Internal.createUniqueKey(Pedigreedescriptions.PEDIGREEDESCRIPTIONS, "KEY_pedigreedescriptions_PRIMARY", Pedigreedescriptions.PEDIGREEDESCRIPTIONS.ID);
        public static final UniqueKey<PedigreenotationsRecord> KEY_PEDIGREENOTATIONS_PRIMARY = Internal.createUniqueKey(Pedigreenotations.PEDIGREENOTATIONS, "KEY_pedigreenotations_PRIMARY", Pedigreenotations.PEDIGREENOTATIONS.ID);
        public static final UniqueKey<PedigreesRecord> KEY_PEDIGREES_PRIMARY = Internal.createUniqueKey(Pedigrees.PEDIGREES, "KEY_pedigrees_PRIMARY", Pedigrees.PEDIGREES.ID);
        public static final UniqueKey<PhenotypedataRecord> KEY_PHENOTYPEDATA_PRIMARY = Internal.createUniqueKey(Phenotypedata.PHENOTYPEDATA, "KEY_phenotypedata_PRIMARY", Phenotypedata.PHENOTYPEDATA.ID);
        public static final UniqueKey<PhenotypesRecord> KEY_PHENOTYPES_PRIMARY = Internal.createUniqueKey(Phenotypes.PHENOTYPES, "KEY_phenotypes_PRIMARY", Phenotypes.PHENOTYPES.ID);
        public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = Internal.createUniqueKey(SchemaVersion.SCHEMA_VERSION, "KEY_schema_version_PRIMARY", SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK);
        public static final UniqueKey<StorageRecord> KEY_STORAGE_PRIMARY = Internal.createUniqueKey(Storage.STORAGE, "KEY_storage_PRIMARY", Storage.STORAGE.ID);
        public static final UniqueKey<StoragedataRecord> KEY_STORAGEDATA_PRIMARY = Internal.createUniqueKey(Storagedata.STORAGEDATA, "KEY_storagedata_PRIMARY", Storagedata.STORAGEDATA.ID);
        public static final UniqueKey<SynonymsRecord> KEY_SYNONYMS_PRIMARY = Internal.createUniqueKey(Synonyms.SYNONYMS, "KEY_synonyms_PRIMARY", Synonyms.SYNONYMS.ID);
        public static final UniqueKey<SynonymtypesRecord> KEY_SYNONYMTYPES_PRIMARY = Internal.createUniqueKey(Synonymtypes.SYNONYMTYPES, "KEY_synonymtypes_PRIMARY", Synonymtypes.SYNONYMTYPES.ID);
        public static final UniqueKey<TaxonomiesRecord> KEY_TAXONOMIES_PRIMARY = Internal.createUniqueKey(Taxonomies.TAXONOMIES, "KEY_taxonomies_PRIMARY", Taxonomies.TAXONOMIES.ID);
        public static final UniqueKey<TreatmentsRecord> KEY_TREATMENTS_PRIMARY = Internal.createUniqueKey(Treatments.TREATMENTS, "KEY_treatments_PRIMARY", Treatments.TREATMENTS.ID);
        public static final UniqueKey<TrialseriesRecord> KEY_TRIALSERIES_PRIMARY = Internal.createUniqueKey(Trialseries.TRIALSERIES, "KEY_trialseries_PRIMARY", Trialseries.TRIALSERIES.ID);
        public static final UniqueKey<UnitsRecord> KEY_UNITS_PRIMARY = Internal.createUniqueKey(Units.UNITS, "KEY_units_PRIMARY", Units.UNITS.ID);
        public static final UniqueKey<UsergroupmembersRecord> KEY_USERGROUPMEMBERS_PRIMARY = Internal.createUniqueKey(Usergroupmembers.USERGROUPMEMBERS, "KEY_usergroupmembers_PRIMARY", Usergroupmembers.USERGROUPMEMBERS.ID);
        public static final UniqueKey<UsergroupsRecord> KEY_USERGROUPS_PRIMARY = Internal.createUniqueKey(Usergroups.USERGROUPS, "KEY_usergroups_PRIMARY", Usergroups.USERGROUPS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AttributedataRecord, AttributesRecord> ATTRIBUTEDATA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_ATTRIBUTES_PRIMARY, Attributedata.ATTRIBUTEDATA, "attributedata_ibfk_1", Attributedata.ATTRIBUTEDATA.ATTRIBUTE_ID);
        public static final ForeignKey<ClimatedataRecord, ClimatesRecord> CLIMATEDATA_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_CLIMATES_PRIMARY, Climatedata.CLIMATEDATA, "climatedata_ibfk_2", Climatedata.CLIMATEDATA.CLIMATE_ID);
        public static final ForeignKey<ClimatedataRecord, LocationsRecord> CLIMATEDATA_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LOCATIONS_PRIMARY, Climatedata.CLIMATEDATA, "climatedata_ibfk_3", Climatedata.CLIMATEDATA.LOCATION_ID);
        public static final ForeignKey<ClimatedataRecord, DatasetsRecord> CLIMATEDATA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Climatedata.CLIMATEDATA, "climatedata_ibfk_1", Climatedata.CLIMATEDATA.DATASET_ID);
        public static final ForeignKey<ClimateoverlaysRecord, ClimatesRecord> CLIMATEOVERLAYS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_CLIMATES_PRIMARY, Climateoverlays.CLIMATEOVERLAYS, "climateoverlays_ibfk_1", Climateoverlays.CLIMATEOVERLAYS.CLIMATE_ID);
        public static final ForeignKey<ClimatesRecord, UnitsRecord> CLIMATES_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_UNITS_PRIMARY, Climates.CLIMATES, "climates_ibfk_1", Climates.CLIMATES.UNIT_ID);
        public static final ForeignKey<CollaboratorsRecord, InstitutionsRecord> COLLABORATORS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_INSTITUTIONS_PRIMARY, Collaborators.COLLABORATORS, "collaborators_ibfk_1", Collaborators.COLLABORATORS.INSTITUTION_ID);
        public static final ForeignKey<CommentsRecord, CommenttypesRecord> COMMENTS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_COMMENTTYPES_PRIMARY, Comments.COMMENTS, "comments_ibfk_1", Comments.COMMENTS.COMMENTTYPE_ID);
        public static final ForeignKey<CompounddataRecord, CompoundsRecord> COMPOUNDDATA_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_COMPOUNDS_PRIMARY, Compounddata.COMPOUNDDATA, "compounddata_ibfk_2", Compounddata.COMPOUNDDATA.COMPOUND_ID);
        public static final ForeignKey<CompounddataRecord, GerminatebaseRecord> COMPOUNDDATA_IBFK_4 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GERMINATEBASE_PRIMARY, Compounddata.COMPOUNDDATA, "compounddata_ibfk_4", Compounddata.COMPOUNDDATA.GERMINATEBASE_ID);
        public static final ForeignKey<CompounddataRecord, DatasetsRecord> COMPOUNDDATA_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Compounddata.COMPOUNDDATA, "compounddata_ibfk_3", Compounddata.COMPOUNDDATA.DATASET_ID);
        public static final ForeignKey<CompounddataRecord, AnalysismethodsRecord> COMPOUNDDATA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_ANALYSISMETHODS_PRIMARY, Compounddata.COMPOUNDDATA, "compounddata_ibfk_1", Compounddata.COMPOUNDDATA.ANALYSISMETHOD_ID);
        public static final ForeignKey<CompoundsRecord, UnitsRecord> COMPOUNDS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_UNITS_PRIMARY, Compounds.COMPOUNDS, "compounds_ibfk_1", Compounds.COMPOUNDS.UNIT_ID);
        public static final ForeignKey<DatasetaccesslogsRecord, DatasetsRecord> DATASETACCESSLOGS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Datasetaccesslogs.DATASETACCESSLOGS, "datasetaccesslogs_ibfk_1", Datasetaccesslogs.DATASETACCESSLOGS.DATASET_ID);
        public static final ForeignKey<DatasetcollaboratorsRecord, DatasetsRecord> DATASETCOLLABORATORS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Datasetcollaborators.DATASETCOLLABORATORS, "datasetcollaborators_ibfk_1", Datasetcollaborators.DATASETCOLLABORATORS.DATASET_ID);
        public static final ForeignKey<DatasetcollaboratorsRecord, CollaboratorsRecord> DATASETCOLLABORATORS_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_COLLABORATORS_PRIMARY, Datasetcollaborators.DATASETCOLLABORATORS, "datasetcollaborators_ibfk_2", Datasetcollaborators.DATASETCOLLABORATORS.COLLABORATOR_ID);
        public static final ForeignKey<DatasetmembersRecord, DatasetsRecord> DATASETMEMBERS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Datasetmembers.DATASETMEMBERS, "datasetmembers_ibfk_1", Datasetmembers.DATASETMEMBERS.DATASET_ID);
        public static final ForeignKey<DatasetmembersRecord, DatasetmembertypesRecord> DATASETMEMBERS_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETMEMBERTYPES_PRIMARY, Datasetmembers.DATASETMEMBERS, "datasetmembers_ibfk_2", Datasetmembers.DATASETMEMBERS.DATASETMEMBERTYPE_ID);
        public static final ForeignKey<DatasetmetaRecord, DatasetsRecord> DATASETMETA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Datasetmeta.DATASETMETA, "datasetmeta_ibfk_1", Datasetmeta.DATASETMETA.DATASET_ID);
        public static final ForeignKey<DatasetpermissionsRecord, DatasetsRecord> DATASETPERMISSIONS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Datasetpermissions.DATASETPERMISSIONS, "datasetpermissions_ibfk_1", Datasetpermissions.DATASETPERMISSIONS.DATASET_ID);
        public static final ForeignKey<DatasetpermissionsRecord, UsergroupsRecord> DATASETPERMISSIONS_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_USERGROUPS_PRIMARY, Datasetpermissions.DATASETPERMISSIONS, "datasetpermissions_ibfk_2", Datasetpermissions.DATASETPERMISSIONS.GROUP_ID);
        public static final ForeignKey<DatasetsRecord, ExperimentsRecord> DATASETS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_EXPERIMENTS_PRIMARY, Datasets.DATASETS, "datasets_ibfk_1", Datasets.DATASETS.EXPERIMENT_ID);
        public static final ForeignKey<DatasetsRecord, LocationsRecord> DATASETS_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LOCATIONS_PRIMARY, Datasets.DATASETS, "datasets_ibfk_3", Datasets.DATASETS.LOCATION_ID);
        public static final ForeignKey<DatasetsRecord, DatasetstatesRecord> DATASETS_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETSTATES_PRIMARY, Datasets.DATASETS, "datasets_ibfk_2", Datasets.DATASETS.DATASET_STATE_ID);
        public static final ForeignKey<DatasetsRecord, LicensesRecord> DATASETS_IBFK_4 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LICENSES_PRIMARY, Datasets.DATASETS, "datasets_ibfk_4", Datasets.DATASETS.LICENSE_ID);
        public static final ForeignKey<ExperimentsRecord, ExperimenttypesRecord> EXPERIMENTS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_EXPERIMENTTYPES_PRIMARY, Experiments.EXPERIMENTS, "experiments_ibfk_1", Experiments.EXPERIMENTS.EXPERIMENT_TYPE_ID);
        public static final ForeignKey<GerminatebaseRecord, TaxonomiesRecord> GERMINATEBASE_IBFK_TAXONOMY = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_TAXONOMIES_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_taxonomy", Germinatebase.GERMINATEBASE.TAXONOMY_ID);
        public static final ForeignKey<GerminatebaseRecord, InstitutionsRecord> GERMINATEBASE_IBFK_INSTITUTION = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_INSTITUTIONS_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_institution", Germinatebase.GERMINATEBASE.INSTITUTION_ID);
        public static final ForeignKey<GerminatebaseRecord, MlsstatusRecord> GERMINATEBASE_IBFK_MLSSTATUS = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_MLSSTATUS_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_mlsstatus", Germinatebase.GERMINATEBASE.MLSSTATUS_ID);
        public static final ForeignKey<GerminatebaseRecord, BiologicalstatusRecord> GERMINATEBASE_IBFK_BIOLOGICALSTATUS = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_BIOLOGICALSTATUS_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_biologicalstatus", Germinatebase.GERMINATEBASE.BIOLOGICALSTATUS_ID);
        public static final ForeignKey<GerminatebaseRecord, CollectingsourcesRecord> GERMINATEBASE_IBFK_COLLSRC = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_COLLECTINGSOURCES_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_collsrc", Germinatebase.GERMINATEBASE.COLLSRC_ID);
        public static final ForeignKey<GerminatebaseRecord, LocationsRecord> GERMINATEBASE_IBFK_LOCATION = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LOCATIONS_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_location", Germinatebase.GERMINATEBASE.LOCATION_ID);
        public static final ForeignKey<GerminatebaseRecord, EntitytypesRecord> GERMINATEBASE_IBFK_ENTITYTYPE = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_ENTITYTYPES_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_entitytype", Germinatebase.GERMINATEBASE.ENTITYTYPE_ID);
        public static final ForeignKey<GerminatebaseRecord, GerminatebaseRecord> GERMINATEBASE_IBFK_ENTITYPARENT = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GERMINATEBASE_PRIMARY, Germinatebase.GERMINATEBASE, "germinatebase_ibfk_entityparent", Germinatebase.GERMINATEBASE.ENTITYPARENT_ID);
        public static final ForeignKey<GroupmembersRecord, GroupsRecord> GROUPMEMBERS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GROUPS_PRIMARY, Groupmembers.GROUPMEMBERS, "groupmembers_ibfk_1", Groupmembers.GROUPMEMBERS.GROUP_ID);
        public static final ForeignKey<GroupsRecord, GrouptypesRecord> GROUPS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GROUPTYPES_PRIMARY, Groups.GROUPS, "groups_ibfk_1", Groups.GROUPS.GROUPTYPE_ID);
        public static final ForeignKey<ImagesRecord, ImagetypesRecord> IMAGES_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_IMAGETYPES_PRIMARY, Images.IMAGES, "images_ibfk_1", Images.IMAGES.IMAGETYPE_ID);
        public static final ForeignKey<InstitutionsRecord, CountriesRecord> INSTITUTIONS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_COUNTRIES_PRIMARY, Institutions.INSTITUTIONS, "institutions_ibfk_1", Institutions.INSTITUTIONS.COUNTRY_ID);
        public static final ForeignKey<LicensedataRecord, LicensesRecord> LICENSEDATA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LICENSES_PRIMARY, Licensedata.LICENSEDATA, "licensedata_ibfk_1", Licensedata.LICENSEDATA.LICENSE_ID);
        public static final ForeignKey<LicensedataRecord, LocalesRecord> LICENSEDATA_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LOCALES_PRIMARY, Licensedata.LICENSEDATA, "licensedata_ibfk_2", Licensedata.LICENSEDATA.LOCALE_ID);
        public static final ForeignKey<LicenselogsRecord, LicensesRecord> LICENSELOGS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LICENSES_PRIMARY, Licenselogs.LICENSELOGS, "licenselogs_ibfk_1", Licenselogs.LICENSELOGS.LICENSE_ID);
        public static final ForeignKey<LinksRecord, LinktypesRecord> LINKS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LINKTYPES_PRIMARY, Links.LINKS, "links_ibfk_1", Links.LINKS.LINKTYPE_ID);
        public static final ForeignKey<LocationsRecord, LocationtypesRecord> LOCATIONS_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LOCATIONTYPES_PRIMARY, Locations.LOCATIONS, "locations_ibfk_2", Locations.LOCATIONS.LOCATIONTYPE_ID);
        public static final ForeignKey<LocationsRecord, CountriesRecord> LOCATIONS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_COUNTRIES_PRIMARY, Locations.LOCATIONS, "locations_ibfk_1", Locations.LOCATIONS.COUNTRY_ID);
        public static final ForeignKey<MapdefinitionsRecord, MapfeaturetypesRecord> MAPDEFINITIONS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_MAPFEATURETYPES_PRIMARY, Mapdefinitions.MAPDEFINITIONS, "mapdefinitions_ibfk_1", Mapdefinitions.MAPDEFINITIONS.MAPFEATURETYPE_ID);
        public static final ForeignKey<MapdefinitionsRecord, MarkersRecord> MAPDEFINITIONS_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_MARKERS_PRIMARY, Mapdefinitions.MAPDEFINITIONS, "mapdefinitions_ibfk_2", Mapdefinitions.MAPDEFINITIONS.MARKER_ID);
        public static final ForeignKey<MapdefinitionsRecord, MapsRecord> MAPDEFINITIONS_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_MAPS_PRIMARY, Mapdefinitions.MAPDEFINITIONS, "mapdefinitions_ibfk_3", Mapdefinitions.MAPDEFINITIONS.MAP_ID);
        public static final ForeignKey<MarkersRecord, MarkertypesRecord> MARKERS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_MARKERTYPES_PRIMARY, Markers.MARKERS, "markers_ibfk_1", Markers.MARKERS.MARKERTYPE_ID);
        public static final ForeignKey<MegaenvironmentdataRecord, LocationsRecord> MEGAENVIRONMENTDATA_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LOCATIONS_PRIMARY, Megaenvironmentdata.MEGAENVIRONMENTDATA, "megaenvironmentdata_ibfk_3", Megaenvironmentdata.MEGAENVIRONMENTDATA.LOCATION_ID);
        public static final ForeignKey<MegaenvironmentdataRecord, MegaenvironmentsourceRecord> MEGAENVIRONMENTDATA_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_MEGAENVIRONMENTSOURCE_PRIMARY, Megaenvironmentdata.MEGAENVIRONMENTDATA, "megaenvironmentdata_ibfk_2", Megaenvironmentdata.MEGAENVIRONMENTDATA.SOURCE_ID);
        public static final ForeignKey<MegaenvironmentdataRecord, MegaenvironmentsRecord> MEGAENVIRONMENTDATA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_MEGAENVIRONMENTS_PRIMARY, Megaenvironmentdata.MEGAENVIRONMENTDATA, "megaenvironmentdata_ibfk_1", Megaenvironmentdata.MEGAENVIRONMENTDATA.MEGAENVIRONMENT_ID);
        public static final ForeignKey<NewsRecord, NewstypesRecord> NEWS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_NEWSTYPES_PRIMARY, News.NEWS, "news_ibfk_1", News.NEWS.NEWSTYPE_ID);
        public static final ForeignKey<PedigreedefinitionsRecord, GerminatebaseRecord> PEDIGREEDEFINITIONS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GERMINATEBASE_PRIMARY, Pedigreedefinitions.PEDIGREEDEFINITIONS, "pedigreedefinitions_ibfk_1", Pedigreedefinitions.PEDIGREEDEFINITIONS.GERMINATEBASE_ID);
        public static final ForeignKey<PedigreedefinitionsRecord, PedigreenotationsRecord> PEDIGREEDEFINITIONS_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_PEDIGREENOTATIONS_PRIMARY, Pedigreedefinitions.PEDIGREEDEFINITIONS, "pedigreedefinitions_ibfk_2", Pedigreedefinitions.PEDIGREEDEFINITIONS.PEDIGREENOTATION_ID);
        public static final ForeignKey<PedigreedefinitionsRecord, PedigreedescriptionsRecord> PEDIGREEDEFINITIONS_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_PEDIGREEDESCRIPTIONS_PRIMARY, Pedigreedefinitions.PEDIGREEDEFINITIONS, "pedigreedefinitions_ibfk_3", Pedigreedefinitions.PEDIGREEDEFINITIONS.PEDIGREEDESCRIPTION_ID);
        public static final ForeignKey<PedigreesRecord, GerminatebaseRecord> PEDIGREES_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GERMINATEBASE_PRIMARY, Pedigrees.PEDIGREES, "pedigrees_ibfk_1", Pedigrees.PEDIGREES.GERMINATEBASE_ID);
        public static final ForeignKey<PedigreesRecord, GerminatebaseRecord> PEDIGREES_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GERMINATEBASE_PRIMARY, Pedigrees.PEDIGREES, "pedigrees_ibfk_2", Pedigrees.PEDIGREES.PARENT_ID);
        public static final ForeignKey<PedigreesRecord, PedigreedescriptionsRecord> PEDIGREES_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_PEDIGREEDESCRIPTIONS_PRIMARY, Pedigrees.PEDIGREES, "pedigrees_ibfk_3", Pedigrees.PEDIGREES.PEDIGREEDESCRIPTION_ID);
        public static final ForeignKey<PhenotypedataRecord, PhenotypesRecord> PHENOTYPEDATA_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_PHENOTYPES_PRIMARY, Phenotypedata.PHENOTYPEDATA, "phenotypedata_ibfk_2", Phenotypedata.PHENOTYPEDATA.PHENOTYPE_ID);
        public static final ForeignKey<PhenotypedataRecord, GerminatebaseRecord> PHENOTYPEDATA_IBFK_3 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GERMINATEBASE_PRIMARY, Phenotypedata.PHENOTYPEDATA, "phenotypedata_ibfk_3", Phenotypedata.PHENOTYPEDATA.GERMINATEBASE_ID);
        public static final ForeignKey<PhenotypedataRecord, DatasetsRecord> PHENOTYPEDATA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_DATASETS_PRIMARY, Phenotypedata.PHENOTYPEDATA, "phenotypedata_ibfk_1", Phenotypedata.PHENOTYPEDATA.DATASET_ID);
        public static final ForeignKey<PhenotypedataRecord, LocationsRecord> PHENOTYPEDATA_IBFK_4 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_LOCATIONS_PRIMARY, Phenotypedata.PHENOTYPEDATA, "phenotypedata_ibfk_4", Phenotypedata.PHENOTYPEDATA.LOCATION_ID);
        public static final ForeignKey<PhenotypedataRecord, TreatmentsRecord> PHENOTYPEDATA_IBFK_5 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_TREATMENTS_PRIMARY, Phenotypedata.PHENOTYPEDATA, "phenotypedata_ibfk_5", Phenotypedata.PHENOTYPEDATA.TREATMENT_ID);
        public static final ForeignKey<PhenotypedataRecord, TrialseriesRecord> PHENOTYPEDATA_IBFK_6 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_TRIALSERIES_PRIMARY, Phenotypedata.PHENOTYPEDATA, "phenotypedata_ibfk_6", Phenotypedata.PHENOTYPEDATA.TRIALSERIES_ID);
        public static final ForeignKey<PhenotypesRecord, UnitsRecord> PHENOTYPES_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_UNITS_PRIMARY, Phenotypes.PHENOTYPES, "phenotypes_ibfk_1", Phenotypes.PHENOTYPES.UNIT_ID);
        public static final ForeignKey<StoragedataRecord, GerminatebaseRecord> STORAGEDATA_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_GERMINATEBASE_PRIMARY, Storagedata.STORAGEDATA, "storagedata_ibfk_1", Storagedata.STORAGEDATA.GERMINATEBASE_ID);
        public static final ForeignKey<StoragedataRecord, StorageRecord> STORAGEDATA_IBFK_2 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_STORAGE_PRIMARY, Storagedata.STORAGEDATA, "storagedata_ibfk_2", Storagedata.STORAGEDATA.STORAGE_ID);
        public static final ForeignKey<SynonymsRecord, SynonymtypesRecord> SYNONYMS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_SYNONYMTYPES_PRIMARY, Synonyms.SYNONYMS, "synonyms_ibfk_1", Synonyms.SYNONYMS.SYNONYMTYPE_ID);
        public static final ForeignKey<UsergroupmembersRecord, UsergroupsRecord> USERGROUPMEMBERS_IBFK_1 = Internal.createForeignKey(jhi.germinate.server.database.Keys.KEY_USERGROUPS_PRIMARY, Usergroupmembers.USERGROUPMEMBERS, "usergroupmembers_ibfk_1", Usergroupmembers.USERGROUPMEMBERS.USERGROUP_ID);
    }
}
